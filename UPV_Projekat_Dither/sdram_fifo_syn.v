// megafunction wizard: %FIFO%
// GENERATION: STANDARD
// VERSION: WM1.0
// MODULE: dcfifo 

// ============================================================
// File Name: sdram_fifo.v
// Megafunction Name(s):
// 			dcfifo
//
// Simulation Library Files(s):
// 			altera_mf
// ============================================================
// ************************************************************
// THIS IS A WIZARD-GENERATED FILE. DO NOT EDIT THIS FILE!
//
// 20.1.1 Build 720 11/11/2020 SJ Lite Edition
// ************************************************************


//Copyright (C) 2020  Intel Corporation. All rights reserved.
//Your use of Intel Corporation's design tools, logic functions 
//and other software and tools, and any partner logic 
//functions, and any output files from any of the foregoing 
//(including device programming or simulation files), and any 
//associated documentation or information are expressly subject 
//to the terms and conditions of the Intel Program License 
//Subscription Agreement, the Intel Quartus Prime License Agreement,
//the Intel FPGA IP License Agreement, or other applicable license
//agreement, including, without limitation, that your use is for
//the sole purpose of programming logic devices manufactured by
//Intel and sold by Intel or its authorized distributors.  Please
//refer to the applicable agreement for further details, at
//https://fpgasoftware.intel.com/eula.


//dcfifo_mixed_widths DEVICE_FAMILY="Cyclone IV E" LPM_NUMWORDS=64 LPM_SHOWAHEAD="ON" LPM_WIDTH=64 LPM_WIDTH_R=64 LPM_WIDTHU=6 LPM_WIDTHU_R=6 OVERFLOW_CHECKING="OFF" RAM_BLOCK_TYPE="M9K" RDSYNC_DELAYPIPE=5 READ_ACLR_SYNCH="OFF" UNDERFLOW_CHECKING="OFF" USE_EAB="ON" WRITE_ACLR_SYNCH="OFF" WRSYNC_DELAYPIPE=5 aclr data q rdclk rdreq rdusedw wrclk wrreq wrusedw INTENDED_DEVICE_FAMILY="Cyclone IV E" lpm_hint="RAM_BLOCK_TYPE=M9K" ALTERA_INTERNAL_OPTIONS=AUTO_SHIFT_REGISTER_RECOGNITION=OFF
//VERSION_BEGIN 20.1 cbx_a_gray2bin 2020:11:11:17:06:45:SJ cbx_a_graycounter 2020:11:11:17:06:45:SJ cbx_altdpram 2020:11:11:17:06:45:SJ cbx_altera_counter 2020:11:11:17:06:45:SJ cbx_altera_gray_counter 2020:11:11:17:06:45:SJ cbx_altera_syncram 2020:11:11:17:06:45:SJ cbx_altera_syncram_nd_impl 2020:11:11:17:06:45:SJ cbx_altsyncram 2020:11:11:17:06:45:SJ cbx_cycloneii 2020:11:11:17:06:45:SJ cbx_dcfifo 2020:11:11:17:06:45:SJ cbx_fifo_common 2020:11:11:17:06:45:SJ cbx_lpm_add_sub 2020:11:11:17:06:45:SJ cbx_lpm_compare 2020:11:11:17:06:45:SJ cbx_lpm_counter 2020:11:11:17:06:45:SJ cbx_lpm_decode 2020:11:11:17:06:45:SJ cbx_lpm_mux 2020:11:11:17:06:45:SJ cbx_mgl 2020:11:11:17:08:38:SJ cbx_nadder 2020:11:11:17:06:46:SJ cbx_scfifo 2020:11:11:17:06:46:SJ cbx_stratix 2020:11:11:17:06:46:SJ cbx_stratixii 2020:11:11:17:06:46:SJ cbx_stratixiii 2020:11:11:17:06:46:SJ cbx_stratixv 2020:11:11:17:06:46:SJ cbx_util_mgl 2020:11:11:17:06:46:SJ  VERSION_END
// synthesis VERILOG_INPUT_VERSION VERILOG_2001
// altera message_off 10463



//a_gray2bin device_family="Cyclone IV E" WIDTH=7 bin gray
//VERSION_BEGIN 20.1 cbx_a_gray2bin 2020:11:11:17:06:45:SJ cbx_mgl 2020:11:11:17:08:38:SJ  VERSION_END

//synthesis_resources = 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  sdram_fifo_a_gray2bin
	( 
	bin,
	gray) /* synthesis synthesis_clearbox=1 */;
	output   [6:0]  bin;
	input   [6:0]  gray;

	wire  xor0;
	wire  xor1;
	wire  xor2;
	wire  xor3;
	wire  xor4;
	wire  xor5;

	assign
		bin = {gray[6], xor5, xor4, xor3, xor2, xor1, xor0},
		xor0 = (gray[0] ^ xor1),
		xor1 = (gray[1] ^ xor2),
		xor2 = (gray[2] ^ xor3),
		xor3 = (gray[3] ^ xor4),
		xor4 = (gray[4] ^ xor5),
		xor5 = (gray[6] ^ gray[5]);
endmodule //sdram_fifo_a_gray2bin


//a_graycounter DEVICE_FAMILY="Cyclone IV E" PVALUE=1 WIDTH=7 aclr clock cnt_en q
//VERSION_BEGIN 20.1 cbx_a_gray2bin 2020:11:11:17:06:45:SJ cbx_a_graycounter 2020:11:11:17:06:45:SJ cbx_cycloneii 2020:11:11:17:06:45:SJ cbx_mgl 2020:11:11:17:08:38:SJ cbx_stratix 2020:11:11:17:06:46:SJ cbx_stratixii 2020:11:11:17:06:46:SJ  VERSION_END

//synthesis_resources = reg 10 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
(* ALTERA_ATTRIBUTE = {"{-to counter5a[0]} POWER_UP_LEVEL=HIGH"} *)
module  sdram_fifo_a_graycounter
	( 
	aclr,
	clock,
	cnt_en,
	q) /* synthesis synthesis_clearbox=1 */;
	input   aclr;
	input   clock;
	input   cnt_en;
	output   [6:0]  q;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   aclr;
	tri1   cnt_en;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	reg	[6:0]	counter5a;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=HIGH"} *)
	reg	parity6;
	reg	[1:0]	sub_parity7a;
	wire  [6:0]  cntr_cout;
	wire  parity_cout;
	wire sclr;
	wire updown;

	// synopsys translate_off
	initial
		counter5a[0:0] = {1{1'b1}};
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) counter5a[0:0] <= {1{1'b1}};
		else
			if (sclr == 1'b1) counter5a[0:0] <= 1'b0;
			else  counter5a[0:0] <= ((cnt_en & (counter5a[0:0] ^ (~ parity_cout))) | ((~ cnt_en) & counter5a[0:0]));
	// synopsys translate_off
	initial
		counter5a[1:1] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) counter5a[1:1] <= 1'b0;
		else
			if (sclr == 1'b1) counter5a[1:1] <= 1'b0;
			else  counter5a[1:1] <= (counter5a[1:1] ^ (counter5a[0:0] & cntr_cout[0]));
	// synopsys translate_off
	initial
		counter5a[2:2] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) counter5a[2:2] <= 1'b0;
		else
			if (sclr == 1'b1) counter5a[2:2] <= 1'b0;
			else  counter5a[2:2] <= (counter5a[2:2] ^ (counter5a[1:1] & cntr_cout[1]));
	// synopsys translate_off
	initial
		counter5a[3:3] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) counter5a[3:3] <= 1'b0;
		else
			if (sclr == 1'b1) counter5a[3:3] <= 1'b0;
			else  counter5a[3:3] <= (counter5a[3:3] ^ (counter5a[2:2] & cntr_cout[2]));
	// synopsys translate_off
	initial
		counter5a[4:4] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) counter5a[4:4] <= 1'b0;
		else
			if (sclr == 1'b1) counter5a[4:4] <= 1'b0;
			else  counter5a[4:4] <= (counter5a[4:4] ^ (counter5a[3:3] & cntr_cout[3]));
	// synopsys translate_off
	initial
		counter5a[5:5] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) counter5a[5:5] <= 1'b0;
		else
			if (sclr == 1'b1) counter5a[5:5] <= 1'b0;
			else  counter5a[5:5] <= (counter5a[5:5] ^ (counter5a[4:4] & cntr_cout[4]));
	// synopsys translate_off
	initial
		counter5a[6:6] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) counter5a[6:6] <= 1'b0;
		else
			if (sclr == 1'b1) counter5a[6:6] <= 1'b0;
			else  counter5a[6:6] <= (counter5a[6:6] ^ cntr_cout[5]);
	// synopsys translate_off
	initial
		parity6 = {1{1'b1}};
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) parity6 <= {1{1'b1}};
		else
			if (sclr == 1'b1) parity6 <= 1'b0;
			else  parity6 <= ((cnt_en & (sub_parity7a[0] ^ sub_parity7a[1])) | ((~ cnt_en) & parity6));
	// synopsys translate_off
	initial
		sub_parity7a[0:0] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sub_parity7a[0:0] <= 1'b0;
		else
			if (sclr == 1'b1) sub_parity7a[0:0] <= 1'b0;
			else  sub_parity7a[0:0] <= ((cnt_en & (((counter5a[0] ^ counter5a[1]) ^ counter5a[2]) ^ counter5a[3])) | ((~ cnt_en) & sub_parity7a[0:0]));
	// synopsys translate_off
	initial
		sub_parity7a[1:1] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sub_parity7a[1:1] <= 1'b0;
		else
			if (sclr == 1'b1) sub_parity7a[1:1] <= 1'b0;
			else  sub_parity7a[1:1] <= ((cnt_en & ((counter5a[4] ^ counter5a[5]) ^ counter5a[6])) | ((~ cnt_en) & sub_parity7a[1:1]));
	assign
		cntr_cout = {1'b0, (cntr_cout[4] & (~ counter5a[4:4])), (cntr_cout[3] & (~ counter5a[3:3])), (cntr_cout[2] & (~ counter5a[2:2])), (cntr_cout[1] & (~ counter5a[1:1])), (cntr_cout[0] & (~ counter5a[0:0])), (cnt_en & parity_cout)},
		parity_cout = (((~ parity6) ^ updown) & cnt_en),
		q = counter5a,
		sclr = 1'b0,
		updown = 1'b1;
endmodule //sdram_fifo_a_graycounter


//a_graycounter DEVICE_FAMILY="Cyclone IV E" PVALUE=1 WIDTH=7 aclr clock cnt_en q ALTERA_INTERNAL_OPTIONS=suppress_da_rule_internal=S102
//VERSION_BEGIN 20.1 cbx_a_gray2bin 2020:11:11:17:06:45:SJ cbx_a_graycounter 2020:11:11:17:06:45:SJ cbx_cycloneii 2020:11:11:17:06:45:SJ cbx_mgl 2020:11:11:17:08:38:SJ cbx_stratix 2020:11:11:17:06:46:SJ cbx_stratixii 2020:11:11:17:06:46:SJ  VERSION_END

//synthesis_resources = reg 10 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
(* ALTERA_ATTRIBUTE = {"suppress_da_rule_internal=S102;{-to counter8a[0]} POWER_UP_LEVEL=HIGH"} *)
module  sdram_fifo_a_graycounter1
	( 
	aclr,
	clock,
	cnt_en,
	q) /* synthesis synthesis_clearbox=1 */;
	input   aclr;
	input   clock;
	input   cnt_en;
	output   [6:0]  q;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   aclr;
	tri1   cnt_en;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	reg	[6:0]	counter8a;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=HIGH"} *)
	reg	parity9;
	reg	[1:0]	sub_parity10a;
	wire  [6:0]  cntr_cout;
	wire  parity_cout;
	wire sclr;
	wire updown;

	// synopsys translate_off
	initial
		counter8a[0:0] = {1{1'b1}};
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) counter8a[0:0] <= {1{1'b1}};
		else
			if (sclr == 1'b1) counter8a[0:0] <= 1'b0;
			else  counter8a[0:0] <= ((cnt_en & (counter8a[0:0] ^ (~ parity_cout))) | ((~ cnt_en) & counter8a[0:0]));
	// synopsys translate_off
	initial
		counter8a[1:1] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) counter8a[1:1] <= 1'b0;
		else
			if (sclr == 1'b1) counter8a[1:1] <= 1'b0;
			else  counter8a[1:1] <= (counter8a[1:1] ^ (counter8a[0:0] & cntr_cout[0]));
	// synopsys translate_off
	initial
		counter8a[2:2] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) counter8a[2:2] <= 1'b0;
		else
			if (sclr == 1'b1) counter8a[2:2] <= 1'b0;
			else  counter8a[2:2] <= (counter8a[2:2] ^ (counter8a[1:1] & cntr_cout[1]));
	// synopsys translate_off
	initial
		counter8a[3:3] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) counter8a[3:3] <= 1'b0;
		else
			if (sclr == 1'b1) counter8a[3:3] <= 1'b0;
			else  counter8a[3:3] <= (counter8a[3:3] ^ (counter8a[2:2] & cntr_cout[2]));
	// synopsys translate_off
	initial
		counter8a[4:4] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) counter8a[4:4] <= 1'b0;
		else
			if (sclr == 1'b1) counter8a[4:4] <= 1'b0;
			else  counter8a[4:4] <= (counter8a[4:4] ^ (counter8a[3:3] & cntr_cout[3]));
	// synopsys translate_off
	initial
		counter8a[5:5] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) counter8a[5:5] <= 1'b0;
		else
			if (sclr == 1'b1) counter8a[5:5] <= 1'b0;
			else  counter8a[5:5] <= (counter8a[5:5] ^ (counter8a[4:4] & cntr_cout[4]));
	// synopsys translate_off
	initial
		counter8a[6:6] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) counter8a[6:6] <= 1'b0;
		else
			if (sclr == 1'b1) counter8a[6:6] <= 1'b0;
			else  counter8a[6:6] <= (counter8a[6:6] ^ cntr_cout[5]);
	// synopsys translate_off
	initial
		parity9 = {1{1'b1}};
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) parity9 <= {1{1'b1}};
		else
			if (sclr == 1'b1) parity9 <= 1'b0;
			else  parity9 <= ((cnt_en & (sub_parity10a[0] ^ sub_parity10a[1])) | ((~ cnt_en) & parity9));
	// synopsys translate_off
	initial
		sub_parity10a[0:0] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sub_parity10a[0:0] <= 1'b0;
		else
			if (sclr == 1'b1) sub_parity10a[0:0] <= 1'b0;
			else  sub_parity10a[0:0] <= ((cnt_en & (((counter8a[0] ^ counter8a[1]) ^ counter8a[2]) ^ counter8a[3])) | ((~ cnt_en) & sub_parity10a[0:0]));
	// synopsys translate_off
	initial
		sub_parity10a[1:1] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sub_parity10a[1:1] <= 1'b0;
		else
			if (sclr == 1'b1) sub_parity10a[1:1] <= 1'b0;
			else  sub_parity10a[1:1] <= ((cnt_en & ((counter8a[4] ^ counter8a[5]) ^ counter8a[6])) | ((~ cnt_en) & sub_parity10a[1:1]));
	assign
		cntr_cout = {1'b0, (cntr_cout[4] & (~ counter8a[4:4])), (cntr_cout[3] & (~ counter8a[3:3])), (cntr_cout[2] & (~ counter8a[2:2])), (cntr_cout[1] & (~ counter8a[1:1])), (cntr_cout[0] & (~ counter8a[0:0])), (cnt_en & parity_cout)},
		parity_cout = (((~ parity9) ^ updown) & cnt_en),
		q = counter8a,
		sclr = 1'b0,
		updown = 1'b1;
endmodule //sdram_fifo_a_graycounter1


//altsyncram ADDRESS_ACLR_B="CLEAR1" ADDRESS_REG_B="CLOCK1" CLOCK_ENABLE_INPUT_B="BYPASS" DEVICE_FAMILY="Cyclone IV E" ENABLE_ECC="FALSE" OPERATION_MODE="DUAL_PORT" OUTDATA_REG_B="UNREGISTERED" RAM_BLOCK_TYPE="M9K" WIDTH_A=64 WIDTH_B=64 WIDTH_BYTEENA_A=1 WIDTH_ECCSTATUS=2 WIDTHAD_A=6 WIDTHAD_B=6 aclr1 address_a address_b addressstall_b clock0 clock1 data_a q_b wren_a
//VERSION_BEGIN 20.1 cbx_altera_syncram_nd_impl 2020:11:11:17:06:45:SJ cbx_altsyncram 2020:11:11:17:06:45:SJ cbx_cycloneii 2020:11:11:17:06:45:SJ cbx_lpm_add_sub 2020:11:11:17:06:45:SJ cbx_lpm_compare 2020:11:11:17:06:45:SJ cbx_lpm_decode 2020:11:11:17:06:45:SJ cbx_lpm_mux 2020:11:11:17:06:45:SJ cbx_mgl 2020:11:11:17:08:38:SJ cbx_nadder 2020:11:11:17:06:46:SJ cbx_stratix 2020:11:11:17:06:46:SJ cbx_stratixii 2020:11:11:17:06:46:SJ cbx_stratixiii 2020:11:11:17:06:46:SJ cbx_stratixv 2020:11:11:17:06:46:SJ cbx_util_mgl 2020:11:11:17:06:46:SJ  VERSION_END

//synthesis_resources = M9K 2 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
(* ALTERA_ATTRIBUTE = {"OPTIMIZE_POWER_DURING_SYNTHESIS=NORMAL_COMPILATION"} *)
module  sdram_fifo_altsyncram
	( 
	aclr1,
	address_a,
	address_b,
	addressstall_b,
	clock0,
	clock1,
	data_a,
	q_b,
	wren_a) /* synthesis synthesis_clearbox=1 */;
	input   aclr1;
	input   [5:0]  address_a;
	input   [5:0]  address_b;
	input   addressstall_b;
	input   clock0;
	input   clock1;
	input   [63:0]  data_a;
	output   [63:0]  q_b;
	input   wren_a;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   aclr1;
	tri1   [5:0]  address_b;
	tri0   addressstall_b;
	tri1   clock0;
	tri1   clock1;
	tri1   [63:0]  data_a;
	tri0   wren_a;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire  [0:0]   wire_ram_block11a_0portbdataout;
	wire  [0:0]   wire_ram_block11a_1portbdataout;
	wire  [0:0]   wire_ram_block11a_2portbdataout;
	wire  [0:0]   wire_ram_block11a_3portbdataout;
	wire  [0:0]   wire_ram_block11a_4portbdataout;
	wire  [0:0]   wire_ram_block11a_5portbdataout;
	wire  [0:0]   wire_ram_block11a_6portbdataout;
	wire  [0:0]   wire_ram_block11a_7portbdataout;
	wire  [0:0]   wire_ram_block11a_8portbdataout;
	wire  [0:0]   wire_ram_block11a_9portbdataout;
	wire  [0:0]   wire_ram_block11a_10portbdataout;
	wire  [0:0]   wire_ram_block11a_11portbdataout;
	wire  [0:0]   wire_ram_block11a_12portbdataout;
	wire  [0:0]   wire_ram_block11a_13portbdataout;
	wire  [0:0]   wire_ram_block11a_14portbdataout;
	wire  [0:0]   wire_ram_block11a_15portbdataout;
	wire  [0:0]   wire_ram_block11a_16portbdataout;
	wire  [0:0]   wire_ram_block11a_17portbdataout;
	wire  [0:0]   wire_ram_block11a_18portbdataout;
	wire  [0:0]   wire_ram_block11a_19portbdataout;
	wire  [0:0]   wire_ram_block11a_20portbdataout;
	wire  [0:0]   wire_ram_block11a_21portbdataout;
	wire  [0:0]   wire_ram_block11a_22portbdataout;
	wire  [0:0]   wire_ram_block11a_23portbdataout;
	wire  [0:0]   wire_ram_block11a_24portbdataout;
	wire  [0:0]   wire_ram_block11a_25portbdataout;
	wire  [0:0]   wire_ram_block11a_26portbdataout;
	wire  [0:0]   wire_ram_block11a_27portbdataout;
	wire  [0:0]   wire_ram_block11a_28portbdataout;
	wire  [0:0]   wire_ram_block11a_29portbdataout;
	wire  [0:0]   wire_ram_block11a_30portbdataout;
	wire  [0:0]   wire_ram_block11a_31portbdataout;
	wire  [0:0]   wire_ram_block11a_32portbdataout;
	wire  [0:0]   wire_ram_block11a_33portbdataout;
	wire  [0:0]   wire_ram_block11a_34portbdataout;
	wire  [0:0]   wire_ram_block11a_35portbdataout;
	wire  [0:0]   wire_ram_block11a_36portbdataout;
	wire  [0:0]   wire_ram_block11a_37portbdataout;
	wire  [0:0]   wire_ram_block11a_38portbdataout;
	wire  [0:0]   wire_ram_block11a_39portbdataout;
	wire  [0:0]   wire_ram_block11a_40portbdataout;
	wire  [0:0]   wire_ram_block11a_41portbdataout;
	wire  [0:0]   wire_ram_block11a_42portbdataout;
	wire  [0:0]   wire_ram_block11a_43portbdataout;
	wire  [0:0]   wire_ram_block11a_44portbdataout;
	wire  [0:0]   wire_ram_block11a_45portbdataout;
	wire  [0:0]   wire_ram_block11a_46portbdataout;
	wire  [0:0]   wire_ram_block11a_47portbdataout;
	wire  [0:0]   wire_ram_block11a_48portbdataout;
	wire  [0:0]   wire_ram_block11a_49portbdataout;
	wire  [0:0]   wire_ram_block11a_50portbdataout;
	wire  [0:0]   wire_ram_block11a_51portbdataout;
	wire  [0:0]   wire_ram_block11a_52portbdataout;
	wire  [0:0]   wire_ram_block11a_53portbdataout;
	wire  [0:0]   wire_ram_block11a_54portbdataout;
	wire  [0:0]   wire_ram_block11a_55portbdataout;
	wire  [0:0]   wire_ram_block11a_56portbdataout;
	wire  [0:0]   wire_ram_block11a_57portbdataout;
	wire  [0:0]   wire_ram_block11a_58portbdataout;
	wire  [0:0]   wire_ram_block11a_59portbdataout;
	wire  [0:0]   wire_ram_block11a_60portbdataout;
	wire  [0:0]   wire_ram_block11a_61portbdataout;
	wire  [0:0]   wire_ram_block11a_62portbdataout;
	wire  [0:0]   wire_ram_block11a_63portbdataout;
	wire  [5:0]  address_a_wire;
	wire  [5:0]  address_b_wire;

	cycloneive_ram_block   ram_block11a_0
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.ena0(wren_a),
	.portaaddr({address_a_wire[5:0]}),
	.portadatain({data_a[0]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[5:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_0portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_0.clk0_core_clock_enable = "ena0",
		ram_block11a_0.clk0_input_clock_enable = "none",
		ram_block11a_0.clk1_core_clock_enable = "none",
		ram_block11a_0.clk1_input_clock_enable = "none",
		ram_block11a_0.connectivity_checking = "OFF",
		ram_block11a_0.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_0.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_0.operation_mode = "dual_port",
		ram_block11a_0.port_a_address_width = 6,
		ram_block11a_0.port_a_data_width = 1,
		ram_block11a_0.port_a_first_address = 0,
		ram_block11a_0.port_a_first_bit_number = 0,
		ram_block11a_0.port_a_last_address = 63,
		ram_block11a_0.port_a_logical_ram_depth = 64,
		ram_block11a_0.port_a_logical_ram_width = 64,
		ram_block11a_0.port_b_address_clear = "clear1",
		ram_block11a_0.port_b_address_clock = "clock1",
		ram_block11a_0.port_b_address_width = 6,
		ram_block11a_0.port_b_data_out_clear = "none",
		ram_block11a_0.port_b_data_width = 1,
		ram_block11a_0.port_b_first_address = 0,
		ram_block11a_0.port_b_first_bit_number = 0,
		ram_block11a_0.port_b_last_address = 63,
		ram_block11a_0.port_b_logical_ram_depth = 64,
		ram_block11a_0.port_b_logical_ram_width = 64,
		ram_block11a_0.port_b_read_enable_clock = "clock1",
		ram_block11a_0.ram_block_type = "M9K",
		ram_block11a_0.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_1
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.ena0(wren_a),
	.portaaddr({address_a_wire[5:0]}),
	.portadatain({data_a[1]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[5:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_1portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_1.clk0_core_clock_enable = "ena0",
		ram_block11a_1.clk0_input_clock_enable = "none",
		ram_block11a_1.clk1_core_clock_enable = "none",
		ram_block11a_1.clk1_input_clock_enable = "none",
		ram_block11a_1.connectivity_checking = "OFF",
		ram_block11a_1.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_1.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_1.operation_mode = "dual_port",
		ram_block11a_1.port_a_address_width = 6,
		ram_block11a_1.port_a_data_width = 1,
		ram_block11a_1.port_a_first_address = 0,
		ram_block11a_1.port_a_first_bit_number = 1,
		ram_block11a_1.port_a_last_address = 63,
		ram_block11a_1.port_a_logical_ram_depth = 64,
		ram_block11a_1.port_a_logical_ram_width = 64,
		ram_block11a_1.port_b_address_clear = "clear1",
		ram_block11a_1.port_b_address_clock = "clock1",
		ram_block11a_1.port_b_address_width = 6,
		ram_block11a_1.port_b_data_out_clear = "none",
		ram_block11a_1.port_b_data_width = 1,
		ram_block11a_1.port_b_first_address = 0,
		ram_block11a_1.port_b_first_bit_number = 1,
		ram_block11a_1.port_b_last_address = 63,
		ram_block11a_1.port_b_logical_ram_depth = 64,
		ram_block11a_1.port_b_logical_ram_width = 64,
		ram_block11a_1.port_b_read_enable_clock = "clock1",
		ram_block11a_1.ram_block_type = "M9K",
		ram_block11a_1.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_2
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.ena0(wren_a),
	.portaaddr({address_a_wire[5:0]}),
	.portadatain({data_a[2]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[5:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_2portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_2.clk0_core_clock_enable = "ena0",
		ram_block11a_2.clk0_input_clock_enable = "none",
		ram_block11a_2.clk1_core_clock_enable = "none",
		ram_block11a_2.clk1_input_clock_enable = "none",
		ram_block11a_2.connectivity_checking = "OFF",
		ram_block11a_2.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_2.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_2.operation_mode = "dual_port",
		ram_block11a_2.port_a_address_width = 6,
		ram_block11a_2.port_a_data_width = 1,
		ram_block11a_2.port_a_first_address = 0,
		ram_block11a_2.port_a_first_bit_number = 2,
		ram_block11a_2.port_a_last_address = 63,
		ram_block11a_2.port_a_logical_ram_depth = 64,
		ram_block11a_2.port_a_logical_ram_width = 64,
		ram_block11a_2.port_b_address_clear = "clear1",
		ram_block11a_2.port_b_address_clock = "clock1",
		ram_block11a_2.port_b_address_width = 6,
		ram_block11a_2.port_b_data_out_clear = "none",
		ram_block11a_2.port_b_data_width = 1,
		ram_block11a_2.port_b_first_address = 0,
		ram_block11a_2.port_b_first_bit_number = 2,
		ram_block11a_2.port_b_last_address = 63,
		ram_block11a_2.port_b_logical_ram_depth = 64,
		ram_block11a_2.port_b_logical_ram_width = 64,
		ram_block11a_2.port_b_read_enable_clock = "clock1",
		ram_block11a_2.ram_block_type = "M9K",
		ram_block11a_2.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_3
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.ena0(wren_a),
	.portaaddr({address_a_wire[5:0]}),
	.portadatain({data_a[3]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[5:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_3portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_3.clk0_core_clock_enable = "ena0",
		ram_block11a_3.clk0_input_clock_enable = "none",
		ram_block11a_3.clk1_core_clock_enable = "none",
		ram_block11a_3.clk1_input_clock_enable = "none",
		ram_block11a_3.connectivity_checking = "OFF",
		ram_block11a_3.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_3.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_3.operation_mode = "dual_port",
		ram_block11a_3.port_a_address_width = 6,
		ram_block11a_3.port_a_data_width = 1,
		ram_block11a_3.port_a_first_address = 0,
		ram_block11a_3.port_a_first_bit_number = 3,
		ram_block11a_3.port_a_last_address = 63,
		ram_block11a_3.port_a_logical_ram_depth = 64,
		ram_block11a_3.port_a_logical_ram_width = 64,
		ram_block11a_3.port_b_address_clear = "clear1",
		ram_block11a_3.port_b_address_clock = "clock1",
		ram_block11a_3.port_b_address_width = 6,
		ram_block11a_3.port_b_data_out_clear = "none",
		ram_block11a_3.port_b_data_width = 1,
		ram_block11a_3.port_b_first_address = 0,
		ram_block11a_3.port_b_first_bit_number = 3,
		ram_block11a_3.port_b_last_address = 63,
		ram_block11a_3.port_b_logical_ram_depth = 64,
		ram_block11a_3.port_b_logical_ram_width = 64,
		ram_block11a_3.port_b_read_enable_clock = "clock1",
		ram_block11a_3.ram_block_type = "M9K",
		ram_block11a_3.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_4
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.ena0(wren_a),
	.portaaddr({address_a_wire[5:0]}),
	.portadatain({data_a[4]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[5:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_4portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_4.clk0_core_clock_enable = "ena0",
		ram_block11a_4.clk0_input_clock_enable = "none",
		ram_block11a_4.clk1_core_clock_enable = "none",
		ram_block11a_4.clk1_input_clock_enable = "none",
		ram_block11a_4.connectivity_checking = "OFF",
		ram_block11a_4.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_4.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_4.operation_mode = "dual_port",
		ram_block11a_4.port_a_address_width = 6,
		ram_block11a_4.port_a_data_width = 1,
		ram_block11a_4.port_a_first_address = 0,
		ram_block11a_4.port_a_first_bit_number = 4,
		ram_block11a_4.port_a_last_address = 63,
		ram_block11a_4.port_a_logical_ram_depth = 64,
		ram_block11a_4.port_a_logical_ram_width = 64,
		ram_block11a_4.port_b_address_clear = "clear1",
		ram_block11a_4.port_b_address_clock = "clock1",
		ram_block11a_4.port_b_address_width = 6,
		ram_block11a_4.port_b_data_out_clear = "none",
		ram_block11a_4.port_b_data_width = 1,
		ram_block11a_4.port_b_first_address = 0,
		ram_block11a_4.port_b_first_bit_number = 4,
		ram_block11a_4.port_b_last_address = 63,
		ram_block11a_4.port_b_logical_ram_depth = 64,
		ram_block11a_4.port_b_logical_ram_width = 64,
		ram_block11a_4.port_b_read_enable_clock = "clock1",
		ram_block11a_4.ram_block_type = "M9K",
		ram_block11a_4.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_5
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.ena0(wren_a),
	.portaaddr({address_a_wire[5:0]}),
	.portadatain({data_a[5]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[5:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_5portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_5.clk0_core_clock_enable = "ena0",
		ram_block11a_5.clk0_input_clock_enable = "none",
		ram_block11a_5.clk1_core_clock_enable = "none",
		ram_block11a_5.clk1_input_clock_enable = "none",
		ram_block11a_5.connectivity_checking = "OFF",
		ram_block11a_5.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_5.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_5.operation_mode = "dual_port",
		ram_block11a_5.port_a_address_width = 6,
		ram_block11a_5.port_a_data_width = 1,
		ram_block11a_5.port_a_first_address = 0,
		ram_block11a_5.port_a_first_bit_number = 5,
		ram_block11a_5.port_a_last_address = 63,
		ram_block11a_5.port_a_logical_ram_depth = 64,
		ram_block11a_5.port_a_logical_ram_width = 64,
		ram_block11a_5.port_b_address_clear = "clear1",
		ram_block11a_5.port_b_address_clock = "clock1",
		ram_block11a_5.port_b_address_width = 6,
		ram_block11a_5.port_b_data_out_clear = "none",
		ram_block11a_5.port_b_data_width = 1,
		ram_block11a_5.port_b_first_address = 0,
		ram_block11a_5.port_b_first_bit_number = 5,
		ram_block11a_5.port_b_last_address = 63,
		ram_block11a_5.port_b_logical_ram_depth = 64,
		ram_block11a_5.port_b_logical_ram_width = 64,
		ram_block11a_5.port_b_read_enable_clock = "clock1",
		ram_block11a_5.ram_block_type = "M9K",
		ram_block11a_5.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_6
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.ena0(wren_a),
	.portaaddr({address_a_wire[5:0]}),
	.portadatain({data_a[6]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[5:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_6portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_6.clk0_core_clock_enable = "ena0",
		ram_block11a_6.clk0_input_clock_enable = "none",
		ram_block11a_6.clk1_core_clock_enable = "none",
		ram_block11a_6.clk1_input_clock_enable = "none",
		ram_block11a_6.connectivity_checking = "OFF",
		ram_block11a_6.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_6.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_6.operation_mode = "dual_port",
		ram_block11a_6.port_a_address_width = 6,
		ram_block11a_6.port_a_data_width = 1,
		ram_block11a_6.port_a_first_address = 0,
		ram_block11a_6.port_a_first_bit_number = 6,
		ram_block11a_6.port_a_last_address = 63,
		ram_block11a_6.port_a_logical_ram_depth = 64,
		ram_block11a_6.port_a_logical_ram_width = 64,
		ram_block11a_6.port_b_address_clear = "clear1",
		ram_block11a_6.port_b_address_clock = "clock1",
		ram_block11a_6.port_b_address_width = 6,
		ram_block11a_6.port_b_data_out_clear = "none",
		ram_block11a_6.port_b_data_width = 1,
		ram_block11a_6.port_b_first_address = 0,
		ram_block11a_6.port_b_first_bit_number = 6,
		ram_block11a_6.port_b_last_address = 63,
		ram_block11a_6.port_b_logical_ram_depth = 64,
		ram_block11a_6.port_b_logical_ram_width = 64,
		ram_block11a_6.port_b_read_enable_clock = "clock1",
		ram_block11a_6.ram_block_type = "M9K",
		ram_block11a_6.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_7
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.ena0(wren_a),
	.portaaddr({address_a_wire[5:0]}),
	.portadatain({data_a[7]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[5:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_7portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_7.clk0_core_clock_enable = "ena0",
		ram_block11a_7.clk0_input_clock_enable = "none",
		ram_block11a_7.clk1_core_clock_enable = "none",
		ram_block11a_7.clk1_input_clock_enable = "none",
		ram_block11a_7.connectivity_checking = "OFF",
		ram_block11a_7.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_7.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_7.operation_mode = "dual_port",
		ram_block11a_7.port_a_address_width = 6,
		ram_block11a_7.port_a_data_width = 1,
		ram_block11a_7.port_a_first_address = 0,
		ram_block11a_7.port_a_first_bit_number = 7,
		ram_block11a_7.port_a_last_address = 63,
		ram_block11a_7.port_a_logical_ram_depth = 64,
		ram_block11a_7.port_a_logical_ram_width = 64,
		ram_block11a_7.port_b_address_clear = "clear1",
		ram_block11a_7.port_b_address_clock = "clock1",
		ram_block11a_7.port_b_address_width = 6,
		ram_block11a_7.port_b_data_out_clear = "none",
		ram_block11a_7.port_b_data_width = 1,
		ram_block11a_7.port_b_first_address = 0,
		ram_block11a_7.port_b_first_bit_number = 7,
		ram_block11a_7.port_b_last_address = 63,
		ram_block11a_7.port_b_logical_ram_depth = 64,
		ram_block11a_7.port_b_logical_ram_width = 64,
		ram_block11a_7.port_b_read_enable_clock = "clock1",
		ram_block11a_7.ram_block_type = "M9K",
		ram_block11a_7.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_8
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.ena0(wren_a),
	.portaaddr({address_a_wire[5:0]}),
	.portadatain({data_a[8]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[5:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_8portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_8.clk0_core_clock_enable = "ena0",
		ram_block11a_8.clk0_input_clock_enable = "none",
		ram_block11a_8.clk1_core_clock_enable = "none",
		ram_block11a_8.clk1_input_clock_enable = "none",
		ram_block11a_8.connectivity_checking = "OFF",
		ram_block11a_8.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_8.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_8.operation_mode = "dual_port",
		ram_block11a_8.port_a_address_width = 6,
		ram_block11a_8.port_a_data_width = 1,
		ram_block11a_8.port_a_first_address = 0,
		ram_block11a_8.port_a_first_bit_number = 8,
		ram_block11a_8.port_a_last_address = 63,
		ram_block11a_8.port_a_logical_ram_depth = 64,
		ram_block11a_8.port_a_logical_ram_width = 64,
		ram_block11a_8.port_b_address_clear = "clear1",
		ram_block11a_8.port_b_address_clock = "clock1",
		ram_block11a_8.port_b_address_width = 6,
		ram_block11a_8.port_b_data_out_clear = "none",
		ram_block11a_8.port_b_data_width = 1,
		ram_block11a_8.port_b_first_address = 0,
		ram_block11a_8.port_b_first_bit_number = 8,
		ram_block11a_8.port_b_last_address = 63,
		ram_block11a_8.port_b_logical_ram_depth = 64,
		ram_block11a_8.port_b_logical_ram_width = 64,
		ram_block11a_8.port_b_read_enable_clock = "clock1",
		ram_block11a_8.ram_block_type = "M9K",
		ram_block11a_8.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_9
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.ena0(wren_a),
	.portaaddr({address_a_wire[5:0]}),
	.portadatain({data_a[9]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[5:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_9portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_9.clk0_core_clock_enable = "ena0",
		ram_block11a_9.clk0_input_clock_enable = "none",
		ram_block11a_9.clk1_core_clock_enable = "none",
		ram_block11a_9.clk1_input_clock_enable = "none",
		ram_block11a_9.connectivity_checking = "OFF",
		ram_block11a_9.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_9.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_9.operation_mode = "dual_port",
		ram_block11a_9.port_a_address_width = 6,
		ram_block11a_9.port_a_data_width = 1,
		ram_block11a_9.port_a_first_address = 0,
		ram_block11a_9.port_a_first_bit_number = 9,
		ram_block11a_9.port_a_last_address = 63,
		ram_block11a_9.port_a_logical_ram_depth = 64,
		ram_block11a_9.port_a_logical_ram_width = 64,
		ram_block11a_9.port_b_address_clear = "clear1",
		ram_block11a_9.port_b_address_clock = "clock1",
		ram_block11a_9.port_b_address_width = 6,
		ram_block11a_9.port_b_data_out_clear = "none",
		ram_block11a_9.port_b_data_width = 1,
		ram_block11a_9.port_b_first_address = 0,
		ram_block11a_9.port_b_first_bit_number = 9,
		ram_block11a_9.port_b_last_address = 63,
		ram_block11a_9.port_b_logical_ram_depth = 64,
		ram_block11a_9.port_b_logical_ram_width = 64,
		ram_block11a_9.port_b_read_enable_clock = "clock1",
		ram_block11a_9.ram_block_type = "M9K",
		ram_block11a_9.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_10
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.ena0(wren_a),
	.portaaddr({address_a_wire[5:0]}),
	.portadatain({data_a[10]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[5:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_10portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_10.clk0_core_clock_enable = "ena0",
		ram_block11a_10.clk0_input_clock_enable = "none",
		ram_block11a_10.clk1_core_clock_enable = "none",
		ram_block11a_10.clk1_input_clock_enable = "none",
		ram_block11a_10.connectivity_checking = "OFF",
		ram_block11a_10.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_10.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_10.operation_mode = "dual_port",
		ram_block11a_10.port_a_address_width = 6,
		ram_block11a_10.port_a_data_width = 1,
		ram_block11a_10.port_a_first_address = 0,
		ram_block11a_10.port_a_first_bit_number = 10,
		ram_block11a_10.port_a_last_address = 63,
		ram_block11a_10.port_a_logical_ram_depth = 64,
		ram_block11a_10.port_a_logical_ram_width = 64,
		ram_block11a_10.port_b_address_clear = "clear1",
		ram_block11a_10.port_b_address_clock = "clock1",
		ram_block11a_10.port_b_address_width = 6,
		ram_block11a_10.port_b_data_out_clear = "none",
		ram_block11a_10.port_b_data_width = 1,
		ram_block11a_10.port_b_first_address = 0,
		ram_block11a_10.port_b_first_bit_number = 10,
		ram_block11a_10.port_b_last_address = 63,
		ram_block11a_10.port_b_logical_ram_depth = 64,
		ram_block11a_10.port_b_logical_ram_width = 64,
		ram_block11a_10.port_b_read_enable_clock = "clock1",
		ram_block11a_10.ram_block_type = "M9K",
		ram_block11a_10.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_11
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.ena0(wren_a),
	.portaaddr({address_a_wire[5:0]}),
	.portadatain({data_a[11]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[5:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_11portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_11.clk0_core_clock_enable = "ena0",
		ram_block11a_11.clk0_input_clock_enable = "none",
		ram_block11a_11.clk1_core_clock_enable = "none",
		ram_block11a_11.clk1_input_clock_enable = "none",
		ram_block11a_11.connectivity_checking = "OFF",
		ram_block11a_11.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_11.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_11.operation_mode = "dual_port",
		ram_block11a_11.port_a_address_width = 6,
		ram_block11a_11.port_a_data_width = 1,
		ram_block11a_11.port_a_first_address = 0,
		ram_block11a_11.port_a_first_bit_number = 11,
		ram_block11a_11.port_a_last_address = 63,
		ram_block11a_11.port_a_logical_ram_depth = 64,
		ram_block11a_11.port_a_logical_ram_width = 64,
		ram_block11a_11.port_b_address_clear = "clear1",
		ram_block11a_11.port_b_address_clock = "clock1",
		ram_block11a_11.port_b_address_width = 6,
		ram_block11a_11.port_b_data_out_clear = "none",
		ram_block11a_11.port_b_data_width = 1,
		ram_block11a_11.port_b_first_address = 0,
		ram_block11a_11.port_b_first_bit_number = 11,
		ram_block11a_11.port_b_last_address = 63,
		ram_block11a_11.port_b_logical_ram_depth = 64,
		ram_block11a_11.port_b_logical_ram_width = 64,
		ram_block11a_11.port_b_read_enable_clock = "clock1",
		ram_block11a_11.ram_block_type = "M9K",
		ram_block11a_11.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_12
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.ena0(wren_a),
	.portaaddr({address_a_wire[5:0]}),
	.portadatain({data_a[12]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[5:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_12portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_12.clk0_core_clock_enable = "ena0",
		ram_block11a_12.clk0_input_clock_enable = "none",
		ram_block11a_12.clk1_core_clock_enable = "none",
		ram_block11a_12.clk1_input_clock_enable = "none",
		ram_block11a_12.connectivity_checking = "OFF",
		ram_block11a_12.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_12.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_12.operation_mode = "dual_port",
		ram_block11a_12.port_a_address_width = 6,
		ram_block11a_12.port_a_data_width = 1,
		ram_block11a_12.port_a_first_address = 0,
		ram_block11a_12.port_a_first_bit_number = 12,
		ram_block11a_12.port_a_last_address = 63,
		ram_block11a_12.port_a_logical_ram_depth = 64,
		ram_block11a_12.port_a_logical_ram_width = 64,
		ram_block11a_12.port_b_address_clear = "clear1",
		ram_block11a_12.port_b_address_clock = "clock1",
		ram_block11a_12.port_b_address_width = 6,
		ram_block11a_12.port_b_data_out_clear = "none",
		ram_block11a_12.port_b_data_width = 1,
		ram_block11a_12.port_b_first_address = 0,
		ram_block11a_12.port_b_first_bit_number = 12,
		ram_block11a_12.port_b_last_address = 63,
		ram_block11a_12.port_b_logical_ram_depth = 64,
		ram_block11a_12.port_b_logical_ram_width = 64,
		ram_block11a_12.port_b_read_enable_clock = "clock1",
		ram_block11a_12.ram_block_type = "M9K",
		ram_block11a_12.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_13
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.ena0(wren_a),
	.portaaddr({address_a_wire[5:0]}),
	.portadatain({data_a[13]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[5:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_13portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_13.clk0_core_clock_enable = "ena0",
		ram_block11a_13.clk0_input_clock_enable = "none",
		ram_block11a_13.clk1_core_clock_enable = "none",
		ram_block11a_13.clk1_input_clock_enable = "none",
		ram_block11a_13.connectivity_checking = "OFF",
		ram_block11a_13.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_13.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_13.operation_mode = "dual_port",
		ram_block11a_13.port_a_address_width = 6,
		ram_block11a_13.port_a_data_width = 1,
		ram_block11a_13.port_a_first_address = 0,
		ram_block11a_13.port_a_first_bit_number = 13,
		ram_block11a_13.port_a_last_address = 63,
		ram_block11a_13.port_a_logical_ram_depth = 64,
		ram_block11a_13.port_a_logical_ram_width = 64,
		ram_block11a_13.port_b_address_clear = "clear1",
		ram_block11a_13.port_b_address_clock = "clock1",
		ram_block11a_13.port_b_address_width = 6,
		ram_block11a_13.port_b_data_out_clear = "none",
		ram_block11a_13.port_b_data_width = 1,
		ram_block11a_13.port_b_first_address = 0,
		ram_block11a_13.port_b_first_bit_number = 13,
		ram_block11a_13.port_b_last_address = 63,
		ram_block11a_13.port_b_logical_ram_depth = 64,
		ram_block11a_13.port_b_logical_ram_width = 64,
		ram_block11a_13.port_b_read_enable_clock = "clock1",
		ram_block11a_13.ram_block_type = "M9K",
		ram_block11a_13.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_14
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.ena0(wren_a),
	.portaaddr({address_a_wire[5:0]}),
	.portadatain({data_a[14]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[5:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_14portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_14.clk0_core_clock_enable = "ena0",
		ram_block11a_14.clk0_input_clock_enable = "none",
		ram_block11a_14.clk1_core_clock_enable = "none",
		ram_block11a_14.clk1_input_clock_enable = "none",
		ram_block11a_14.connectivity_checking = "OFF",
		ram_block11a_14.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_14.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_14.operation_mode = "dual_port",
		ram_block11a_14.port_a_address_width = 6,
		ram_block11a_14.port_a_data_width = 1,
		ram_block11a_14.port_a_first_address = 0,
		ram_block11a_14.port_a_first_bit_number = 14,
		ram_block11a_14.port_a_last_address = 63,
		ram_block11a_14.port_a_logical_ram_depth = 64,
		ram_block11a_14.port_a_logical_ram_width = 64,
		ram_block11a_14.port_b_address_clear = "clear1",
		ram_block11a_14.port_b_address_clock = "clock1",
		ram_block11a_14.port_b_address_width = 6,
		ram_block11a_14.port_b_data_out_clear = "none",
		ram_block11a_14.port_b_data_width = 1,
		ram_block11a_14.port_b_first_address = 0,
		ram_block11a_14.port_b_first_bit_number = 14,
		ram_block11a_14.port_b_last_address = 63,
		ram_block11a_14.port_b_logical_ram_depth = 64,
		ram_block11a_14.port_b_logical_ram_width = 64,
		ram_block11a_14.port_b_read_enable_clock = "clock1",
		ram_block11a_14.ram_block_type = "M9K",
		ram_block11a_14.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_15
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.ena0(wren_a),
	.portaaddr({address_a_wire[5:0]}),
	.portadatain({data_a[15]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[5:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_15portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_15.clk0_core_clock_enable = "ena0",
		ram_block11a_15.clk0_input_clock_enable = "none",
		ram_block11a_15.clk1_core_clock_enable = "none",
		ram_block11a_15.clk1_input_clock_enable = "none",
		ram_block11a_15.connectivity_checking = "OFF",
		ram_block11a_15.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_15.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_15.operation_mode = "dual_port",
		ram_block11a_15.port_a_address_width = 6,
		ram_block11a_15.port_a_data_width = 1,
		ram_block11a_15.port_a_first_address = 0,
		ram_block11a_15.port_a_first_bit_number = 15,
		ram_block11a_15.port_a_last_address = 63,
		ram_block11a_15.port_a_logical_ram_depth = 64,
		ram_block11a_15.port_a_logical_ram_width = 64,
		ram_block11a_15.port_b_address_clear = "clear1",
		ram_block11a_15.port_b_address_clock = "clock1",
		ram_block11a_15.port_b_address_width = 6,
		ram_block11a_15.port_b_data_out_clear = "none",
		ram_block11a_15.port_b_data_width = 1,
		ram_block11a_15.port_b_first_address = 0,
		ram_block11a_15.port_b_first_bit_number = 15,
		ram_block11a_15.port_b_last_address = 63,
		ram_block11a_15.port_b_logical_ram_depth = 64,
		ram_block11a_15.port_b_logical_ram_width = 64,
		ram_block11a_15.port_b_read_enable_clock = "clock1",
		ram_block11a_15.ram_block_type = "M9K",
		ram_block11a_15.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_16
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.ena0(wren_a),
	.portaaddr({address_a_wire[5:0]}),
	.portadatain({data_a[16]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[5:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_16portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_16.clk0_core_clock_enable = "ena0",
		ram_block11a_16.clk0_input_clock_enable = "none",
		ram_block11a_16.clk1_core_clock_enable = "none",
		ram_block11a_16.clk1_input_clock_enable = "none",
		ram_block11a_16.connectivity_checking = "OFF",
		ram_block11a_16.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_16.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_16.operation_mode = "dual_port",
		ram_block11a_16.port_a_address_width = 6,
		ram_block11a_16.port_a_data_width = 1,
		ram_block11a_16.port_a_first_address = 0,
		ram_block11a_16.port_a_first_bit_number = 16,
		ram_block11a_16.port_a_last_address = 63,
		ram_block11a_16.port_a_logical_ram_depth = 64,
		ram_block11a_16.port_a_logical_ram_width = 64,
		ram_block11a_16.port_b_address_clear = "clear1",
		ram_block11a_16.port_b_address_clock = "clock1",
		ram_block11a_16.port_b_address_width = 6,
		ram_block11a_16.port_b_data_out_clear = "none",
		ram_block11a_16.port_b_data_width = 1,
		ram_block11a_16.port_b_first_address = 0,
		ram_block11a_16.port_b_first_bit_number = 16,
		ram_block11a_16.port_b_last_address = 63,
		ram_block11a_16.port_b_logical_ram_depth = 64,
		ram_block11a_16.port_b_logical_ram_width = 64,
		ram_block11a_16.port_b_read_enable_clock = "clock1",
		ram_block11a_16.ram_block_type = "M9K",
		ram_block11a_16.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_17
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.ena0(wren_a),
	.portaaddr({address_a_wire[5:0]}),
	.portadatain({data_a[17]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[5:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_17portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_17.clk0_core_clock_enable = "ena0",
		ram_block11a_17.clk0_input_clock_enable = "none",
		ram_block11a_17.clk1_core_clock_enable = "none",
		ram_block11a_17.clk1_input_clock_enable = "none",
		ram_block11a_17.connectivity_checking = "OFF",
		ram_block11a_17.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_17.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_17.operation_mode = "dual_port",
		ram_block11a_17.port_a_address_width = 6,
		ram_block11a_17.port_a_data_width = 1,
		ram_block11a_17.port_a_first_address = 0,
		ram_block11a_17.port_a_first_bit_number = 17,
		ram_block11a_17.port_a_last_address = 63,
		ram_block11a_17.port_a_logical_ram_depth = 64,
		ram_block11a_17.port_a_logical_ram_width = 64,
		ram_block11a_17.port_b_address_clear = "clear1",
		ram_block11a_17.port_b_address_clock = "clock1",
		ram_block11a_17.port_b_address_width = 6,
		ram_block11a_17.port_b_data_out_clear = "none",
		ram_block11a_17.port_b_data_width = 1,
		ram_block11a_17.port_b_first_address = 0,
		ram_block11a_17.port_b_first_bit_number = 17,
		ram_block11a_17.port_b_last_address = 63,
		ram_block11a_17.port_b_logical_ram_depth = 64,
		ram_block11a_17.port_b_logical_ram_width = 64,
		ram_block11a_17.port_b_read_enable_clock = "clock1",
		ram_block11a_17.ram_block_type = "M9K",
		ram_block11a_17.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_18
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.ena0(wren_a),
	.portaaddr({address_a_wire[5:0]}),
	.portadatain({data_a[18]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[5:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_18portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_18.clk0_core_clock_enable = "ena0",
		ram_block11a_18.clk0_input_clock_enable = "none",
		ram_block11a_18.clk1_core_clock_enable = "none",
		ram_block11a_18.clk1_input_clock_enable = "none",
		ram_block11a_18.connectivity_checking = "OFF",
		ram_block11a_18.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_18.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_18.operation_mode = "dual_port",
		ram_block11a_18.port_a_address_width = 6,
		ram_block11a_18.port_a_data_width = 1,
		ram_block11a_18.port_a_first_address = 0,
		ram_block11a_18.port_a_first_bit_number = 18,
		ram_block11a_18.port_a_last_address = 63,
		ram_block11a_18.port_a_logical_ram_depth = 64,
		ram_block11a_18.port_a_logical_ram_width = 64,
		ram_block11a_18.port_b_address_clear = "clear1",
		ram_block11a_18.port_b_address_clock = "clock1",
		ram_block11a_18.port_b_address_width = 6,
		ram_block11a_18.port_b_data_out_clear = "none",
		ram_block11a_18.port_b_data_width = 1,
		ram_block11a_18.port_b_first_address = 0,
		ram_block11a_18.port_b_first_bit_number = 18,
		ram_block11a_18.port_b_last_address = 63,
		ram_block11a_18.port_b_logical_ram_depth = 64,
		ram_block11a_18.port_b_logical_ram_width = 64,
		ram_block11a_18.port_b_read_enable_clock = "clock1",
		ram_block11a_18.ram_block_type = "M9K",
		ram_block11a_18.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_19
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.ena0(wren_a),
	.portaaddr({address_a_wire[5:0]}),
	.portadatain({data_a[19]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[5:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_19portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_19.clk0_core_clock_enable = "ena0",
		ram_block11a_19.clk0_input_clock_enable = "none",
		ram_block11a_19.clk1_core_clock_enable = "none",
		ram_block11a_19.clk1_input_clock_enable = "none",
		ram_block11a_19.connectivity_checking = "OFF",
		ram_block11a_19.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_19.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_19.operation_mode = "dual_port",
		ram_block11a_19.port_a_address_width = 6,
		ram_block11a_19.port_a_data_width = 1,
		ram_block11a_19.port_a_first_address = 0,
		ram_block11a_19.port_a_first_bit_number = 19,
		ram_block11a_19.port_a_last_address = 63,
		ram_block11a_19.port_a_logical_ram_depth = 64,
		ram_block11a_19.port_a_logical_ram_width = 64,
		ram_block11a_19.port_b_address_clear = "clear1",
		ram_block11a_19.port_b_address_clock = "clock1",
		ram_block11a_19.port_b_address_width = 6,
		ram_block11a_19.port_b_data_out_clear = "none",
		ram_block11a_19.port_b_data_width = 1,
		ram_block11a_19.port_b_first_address = 0,
		ram_block11a_19.port_b_first_bit_number = 19,
		ram_block11a_19.port_b_last_address = 63,
		ram_block11a_19.port_b_logical_ram_depth = 64,
		ram_block11a_19.port_b_logical_ram_width = 64,
		ram_block11a_19.port_b_read_enable_clock = "clock1",
		ram_block11a_19.ram_block_type = "M9K",
		ram_block11a_19.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_20
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.ena0(wren_a),
	.portaaddr({address_a_wire[5:0]}),
	.portadatain({data_a[20]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[5:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_20portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_20.clk0_core_clock_enable = "ena0",
		ram_block11a_20.clk0_input_clock_enable = "none",
		ram_block11a_20.clk1_core_clock_enable = "none",
		ram_block11a_20.clk1_input_clock_enable = "none",
		ram_block11a_20.connectivity_checking = "OFF",
		ram_block11a_20.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_20.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_20.operation_mode = "dual_port",
		ram_block11a_20.port_a_address_width = 6,
		ram_block11a_20.port_a_data_width = 1,
		ram_block11a_20.port_a_first_address = 0,
		ram_block11a_20.port_a_first_bit_number = 20,
		ram_block11a_20.port_a_last_address = 63,
		ram_block11a_20.port_a_logical_ram_depth = 64,
		ram_block11a_20.port_a_logical_ram_width = 64,
		ram_block11a_20.port_b_address_clear = "clear1",
		ram_block11a_20.port_b_address_clock = "clock1",
		ram_block11a_20.port_b_address_width = 6,
		ram_block11a_20.port_b_data_out_clear = "none",
		ram_block11a_20.port_b_data_width = 1,
		ram_block11a_20.port_b_first_address = 0,
		ram_block11a_20.port_b_first_bit_number = 20,
		ram_block11a_20.port_b_last_address = 63,
		ram_block11a_20.port_b_logical_ram_depth = 64,
		ram_block11a_20.port_b_logical_ram_width = 64,
		ram_block11a_20.port_b_read_enable_clock = "clock1",
		ram_block11a_20.ram_block_type = "M9K",
		ram_block11a_20.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_21
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.ena0(wren_a),
	.portaaddr({address_a_wire[5:0]}),
	.portadatain({data_a[21]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[5:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_21portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_21.clk0_core_clock_enable = "ena0",
		ram_block11a_21.clk0_input_clock_enable = "none",
		ram_block11a_21.clk1_core_clock_enable = "none",
		ram_block11a_21.clk1_input_clock_enable = "none",
		ram_block11a_21.connectivity_checking = "OFF",
		ram_block11a_21.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_21.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_21.operation_mode = "dual_port",
		ram_block11a_21.port_a_address_width = 6,
		ram_block11a_21.port_a_data_width = 1,
		ram_block11a_21.port_a_first_address = 0,
		ram_block11a_21.port_a_first_bit_number = 21,
		ram_block11a_21.port_a_last_address = 63,
		ram_block11a_21.port_a_logical_ram_depth = 64,
		ram_block11a_21.port_a_logical_ram_width = 64,
		ram_block11a_21.port_b_address_clear = "clear1",
		ram_block11a_21.port_b_address_clock = "clock1",
		ram_block11a_21.port_b_address_width = 6,
		ram_block11a_21.port_b_data_out_clear = "none",
		ram_block11a_21.port_b_data_width = 1,
		ram_block11a_21.port_b_first_address = 0,
		ram_block11a_21.port_b_first_bit_number = 21,
		ram_block11a_21.port_b_last_address = 63,
		ram_block11a_21.port_b_logical_ram_depth = 64,
		ram_block11a_21.port_b_logical_ram_width = 64,
		ram_block11a_21.port_b_read_enable_clock = "clock1",
		ram_block11a_21.ram_block_type = "M9K",
		ram_block11a_21.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_22
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.ena0(wren_a),
	.portaaddr({address_a_wire[5:0]}),
	.portadatain({data_a[22]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[5:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_22portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_22.clk0_core_clock_enable = "ena0",
		ram_block11a_22.clk0_input_clock_enable = "none",
		ram_block11a_22.clk1_core_clock_enable = "none",
		ram_block11a_22.clk1_input_clock_enable = "none",
		ram_block11a_22.connectivity_checking = "OFF",
		ram_block11a_22.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_22.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_22.operation_mode = "dual_port",
		ram_block11a_22.port_a_address_width = 6,
		ram_block11a_22.port_a_data_width = 1,
		ram_block11a_22.port_a_first_address = 0,
		ram_block11a_22.port_a_first_bit_number = 22,
		ram_block11a_22.port_a_last_address = 63,
		ram_block11a_22.port_a_logical_ram_depth = 64,
		ram_block11a_22.port_a_logical_ram_width = 64,
		ram_block11a_22.port_b_address_clear = "clear1",
		ram_block11a_22.port_b_address_clock = "clock1",
		ram_block11a_22.port_b_address_width = 6,
		ram_block11a_22.port_b_data_out_clear = "none",
		ram_block11a_22.port_b_data_width = 1,
		ram_block11a_22.port_b_first_address = 0,
		ram_block11a_22.port_b_first_bit_number = 22,
		ram_block11a_22.port_b_last_address = 63,
		ram_block11a_22.port_b_logical_ram_depth = 64,
		ram_block11a_22.port_b_logical_ram_width = 64,
		ram_block11a_22.port_b_read_enable_clock = "clock1",
		ram_block11a_22.ram_block_type = "M9K",
		ram_block11a_22.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_23
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.ena0(wren_a),
	.portaaddr({address_a_wire[5:0]}),
	.portadatain({data_a[23]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[5:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_23portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_23.clk0_core_clock_enable = "ena0",
		ram_block11a_23.clk0_input_clock_enable = "none",
		ram_block11a_23.clk1_core_clock_enable = "none",
		ram_block11a_23.clk1_input_clock_enable = "none",
		ram_block11a_23.connectivity_checking = "OFF",
		ram_block11a_23.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_23.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_23.operation_mode = "dual_port",
		ram_block11a_23.port_a_address_width = 6,
		ram_block11a_23.port_a_data_width = 1,
		ram_block11a_23.port_a_first_address = 0,
		ram_block11a_23.port_a_first_bit_number = 23,
		ram_block11a_23.port_a_last_address = 63,
		ram_block11a_23.port_a_logical_ram_depth = 64,
		ram_block11a_23.port_a_logical_ram_width = 64,
		ram_block11a_23.port_b_address_clear = "clear1",
		ram_block11a_23.port_b_address_clock = "clock1",
		ram_block11a_23.port_b_address_width = 6,
		ram_block11a_23.port_b_data_out_clear = "none",
		ram_block11a_23.port_b_data_width = 1,
		ram_block11a_23.port_b_first_address = 0,
		ram_block11a_23.port_b_first_bit_number = 23,
		ram_block11a_23.port_b_last_address = 63,
		ram_block11a_23.port_b_logical_ram_depth = 64,
		ram_block11a_23.port_b_logical_ram_width = 64,
		ram_block11a_23.port_b_read_enable_clock = "clock1",
		ram_block11a_23.ram_block_type = "M9K",
		ram_block11a_23.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_24
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.ena0(wren_a),
	.portaaddr({address_a_wire[5:0]}),
	.portadatain({data_a[24]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[5:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_24portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_24.clk0_core_clock_enable = "ena0",
		ram_block11a_24.clk0_input_clock_enable = "none",
		ram_block11a_24.clk1_core_clock_enable = "none",
		ram_block11a_24.clk1_input_clock_enable = "none",
		ram_block11a_24.connectivity_checking = "OFF",
		ram_block11a_24.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_24.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_24.operation_mode = "dual_port",
		ram_block11a_24.port_a_address_width = 6,
		ram_block11a_24.port_a_data_width = 1,
		ram_block11a_24.port_a_first_address = 0,
		ram_block11a_24.port_a_first_bit_number = 24,
		ram_block11a_24.port_a_last_address = 63,
		ram_block11a_24.port_a_logical_ram_depth = 64,
		ram_block11a_24.port_a_logical_ram_width = 64,
		ram_block11a_24.port_b_address_clear = "clear1",
		ram_block11a_24.port_b_address_clock = "clock1",
		ram_block11a_24.port_b_address_width = 6,
		ram_block11a_24.port_b_data_out_clear = "none",
		ram_block11a_24.port_b_data_width = 1,
		ram_block11a_24.port_b_first_address = 0,
		ram_block11a_24.port_b_first_bit_number = 24,
		ram_block11a_24.port_b_last_address = 63,
		ram_block11a_24.port_b_logical_ram_depth = 64,
		ram_block11a_24.port_b_logical_ram_width = 64,
		ram_block11a_24.port_b_read_enable_clock = "clock1",
		ram_block11a_24.ram_block_type = "M9K",
		ram_block11a_24.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_25
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.ena0(wren_a),
	.portaaddr({address_a_wire[5:0]}),
	.portadatain({data_a[25]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[5:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_25portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_25.clk0_core_clock_enable = "ena0",
		ram_block11a_25.clk0_input_clock_enable = "none",
		ram_block11a_25.clk1_core_clock_enable = "none",
		ram_block11a_25.clk1_input_clock_enable = "none",
		ram_block11a_25.connectivity_checking = "OFF",
		ram_block11a_25.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_25.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_25.operation_mode = "dual_port",
		ram_block11a_25.port_a_address_width = 6,
		ram_block11a_25.port_a_data_width = 1,
		ram_block11a_25.port_a_first_address = 0,
		ram_block11a_25.port_a_first_bit_number = 25,
		ram_block11a_25.port_a_last_address = 63,
		ram_block11a_25.port_a_logical_ram_depth = 64,
		ram_block11a_25.port_a_logical_ram_width = 64,
		ram_block11a_25.port_b_address_clear = "clear1",
		ram_block11a_25.port_b_address_clock = "clock1",
		ram_block11a_25.port_b_address_width = 6,
		ram_block11a_25.port_b_data_out_clear = "none",
		ram_block11a_25.port_b_data_width = 1,
		ram_block11a_25.port_b_first_address = 0,
		ram_block11a_25.port_b_first_bit_number = 25,
		ram_block11a_25.port_b_last_address = 63,
		ram_block11a_25.port_b_logical_ram_depth = 64,
		ram_block11a_25.port_b_logical_ram_width = 64,
		ram_block11a_25.port_b_read_enable_clock = "clock1",
		ram_block11a_25.ram_block_type = "M9K",
		ram_block11a_25.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_26
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.ena0(wren_a),
	.portaaddr({address_a_wire[5:0]}),
	.portadatain({data_a[26]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[5:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_26portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_26.clk0_core_clock_enable = "ena0",
		ram_block11a_26.clk0_input_clock_enable = "none",
		ram_block11a_26.clk1_core_clock_enable = "none",
		ram_block11a_26.clk1_input_clock_enable = "none",
		ram_block11a_26.connectivity_checking = "OFF",
		ram_block11a_26.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_26.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_26.operation_mode = "dual_port",
		ram_block11a_26.port_a_address_width = 6,
		ram_block11a_26.port_a_data_width = 1,
		ram_block11a_26.port_a_first_address = 0,
		ram_block11a_26.port_a_first_bit_number = 26,
		ram_block11a_26.port_a_last_address = 63,
		ram_block11a_26.port_a_logical_ram_depth = 64,
		ram_block11a_26.port_a_logical_ram_width = 64,
		ram_block11a_26.port_b_address_clear = "clear1",
		ram_block11a_26.port_b_address_clock = "clock1",
		ram_block11a_26.port_b_address_width = 6,
		ram_block11a_26.port_b_data_out_clear = "none",
		ram_block11a_26.port_b_data_width = 1,
		ram_block11a_26.port_b_first_address = 0,
		ram_block11a_26.port_b_first_bit_number = 26,
		ram_block11a_26.port_b_last_address = 63,
		ram_block11a_26.port_b_logical_ram_depth = 64,
		ram_block11a_26.port_b_logical_ram_width = 64,
		ram_block11a_26.port_b_read_enable_clock = "clock1",
		ram_block11a_26.ram_block_type = "M9K",
		ram_block11a_26.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_27
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.ena0(wren_a),
	.portaaddr({address_a_wire[5:0]}),
	.portadatain({data_a[27]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[5:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_27portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_27.clk0_core_clock_enable = "ena0",
		ram_block11a_27.clk0_input_clock_enable = "none",
		ram_block11a_27.clk1_core_clock_enable = "none",
		ram_block11a_27.clk1_input_clock_enable = "none",
		ram_block11a_27.connectivity_checking = "OFF",
		ram_block11a_27.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_27.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_27.operation_mode = "dual_port",
		ram_block11a_27.port_a_address_width = 6,
		ram_block11a_27.port_a_data_width = 1,
		ram_block11a_27.port_a_first_address = 0,
		ram_block11a_27.port_a_first_bit_number = 27,
		ram_block11a_27.port_a_last_address = 63,
		ram_block11a_27.port_a_logical_ram_depth = 64,
		ram_block11a_27.port_a_logical_ram_width = 64,
		ram_block11a_27.port_b_address_clear = "clear1",
		ram_block11a_27.port_b_address_clock = "clock1",
		ram_block11a_27.port_b_address_width = 6,
		ram_block11a_27.port_b_data_out_clear = "none",
		ram_block11a_27.port_b_data_width = 1,
		ram_block11a_27.port_b_first_address = 0,
		ram_block11a_27.port_b_first_bit_number = 27,
		ram_block11a_27.port_b_last_address = 63,
		ram_block11a_27.port_b_logical_ram_depth = 64,
		ram_block11a_27.port_b_logical_ram_width = 64,
		ram_block11a_27.port_b_read_enable_clock = "clock1",
		ram_block11a_27.ram_block_type = "M9K",
		ram_block11a_27.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_28
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.ena0(wren_a),
	.portaaddr({address_a_wire[5:0]}),
	.portadatain({data_a[28]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[5:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_28portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_28.clk0_core_clock_enable = "ena0",
		ram_block11a_28.clk0_input_clock_enable = "none",
		ram_block11a_28.clk1_core_clock_enable = "none",
		ram_block11a_28.clk1_input_clock_enable = "none",
		ram_block11a_28.connectivity_checking = "OFF",
		ram_block11a_28.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_28.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_28.operation_mode = "dual_port",
		ram_block11a_28.port_a_address_width = 6,
		ram_block11a_28.port_a_data_width = 1,
		ram_block11a_28.port_a_first_address = 0,
		ram_block11a_28.port_a_first_bit_number = 28,
		ram_block11a_28.port_a_last_address = 63,
		ram_block11a_28.port_a_logical_ram_depth = 64,
		ram_block11a_28.port_a_logical_ram_width = 64,
		ram_block11a_28.port_b_address_clear = "clear1",
		ram_block11a_28.port_b_address_clock = "clock1",
		ram_block11a_28.port_b_address_width = 6,
		ram_block11a_28.port_b_data_out_clear = "none",
		ram_block11a_28.port_b_data_width = 1,
		ram_block11a_28.port_b_first_address = 0,
		ram_block11a_28.port_b_first_bit_number = 28,
		ram_block11a_28.port_b_last_address = 63,
		ram_block11a_28.port_b_logical_ram_depth = 64,
		ram_block11a_28.port_b_logical_ram_width = 64,
		ram_block11a_28.port_b_read_enable_clock = "clock1",
		ram_block11a_28.ram_block_type = "M9K",
		ram_block11a_28.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_29
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.ena0(wren_a),
	.portaaddr({address_a_wire[5:0]}),
	.portadatain({data_a[29]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[5:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_29portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_29.clk0_core_clock_enable = "ena0",
		ram_block11a_29.clk0_input_clock_enable = "none",
		ram_block11a_29.clk1_core_clock_enable = "none",
		ram_block11a_29.clk1_input_clock_enable = "none",
		ram_block11a_29.connectivity_checking = "OFF",
		ram_block11a_29.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_29.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_29.operation_mode = "dual_port",
		ram_block11a_29.port_a_address_width = 6,
		ram_block11a_29.port_a_data_width = 1,
		ram_block11a_29.port_a_first_address = 0,
		ram_block11a_29.port_a_first_bit_number = 29,
		ram_block11a_29.port_a_last_address = 63,
		ram_block11a_29.port_a_logical_ram_depth = 64,
		ram_block11a_29.port_a_logical_ram_width = 64,
		ram_block11a_29.port_b_address_clear = "clear1",
		ram_block11a_29.port_b_address_clock = "clock1",
		ram_block11a_29.port_b_address_width = 6,
		ram_block11a_29.port_b_data_out_clear = "none",
		ram_block11a_29.port_b_data_width = 1,
		ram_block11a_29.port_b_first_address = 0,
		ram_block11a_29.port_b_first_bit_number = 29,
		ram_block11a_29.port_b_last_address = 63,
		ram_block11a_29.port_b_logical_ram_depth = 64,
		ram_block11a_29.port_b_logical_ram_width = 64,
		ram_block11a_29.port_b_read_enable_clock = "clock1",
		ram_block11a_29.ram_block_type = "M9K",
		ram_block11a_29.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_30
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.ena0(wren_a),
	.portaaddr({address_a_wire[5:0]}),
	.portadatain({data_a[30]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[5:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_30portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_30.clk0_core_clock_enable = "ena0",
		ram_block11a_30.clk0_input_clock_enable = "none",
		ram_block11a_30.clk1_core_clock_enable = "none",
		ram_block11a_30.clk1_input_clock_enable = "none",
		ram_block11a_30.connectivity_checking = "OFF",
		ram_block11a_30.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_30.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_30.operation_mode = "dual_port",
		ram_block11a_30.port_a_address_width = 6,
		ram_block11a_30.port_a_data_width = 1,
		ram_block11a_30.port_a_first_address = 0,
		ram_block11a_30.port_a_first_bit_number = 30,
		ram_block11a_30.port_a_last_address = 63,
		ram_block11a_30.port_a_logical_ram_depth = 64,
		ram_block11a_30.port_a_logical_ram_width = 64,
		ram_block11a_30.port_b_address_clear = "clear1",
		ram_block11a_30.port_b_address_clock = "clock1",
		ram_block11a_30.port_b_address_width = 6,
		ram_block11a_30.port_b_data_out_clear = "none",
		ram_block11a_30.port_b_data_width = 1,
		ram_block11a_30.port_b_first_address = 0,
		ram_block11a_30.port_b_first_bit_number = 30,
		ram_block11a_30.port_b_last_address = 63,
		ram_block11a_30.port_b_logical_ram_depth = 64,
		ram_block11a_30.port_b_logical_ram_width = 64,
		ram_block11a_30.port_b_read_enable_clock = "clock1",
		ram_block11a_30.ram_block_type = "M9K",
		ram_block11a_30.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_31
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.ena0(wren_a),
	.portaaddr({address_a_wire[5:0]}),
	.portadatain({data_a[31]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[5:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_31portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_31.clk0_core_clock_enable = "ena0",
		ram_block11a_31.clk0_input_clock_enable = "none",
		ram_block11a_31.clk1_core_clock_enable = "none",
		ram_block11a_31.clk1_input_clock_enable = "none",
		ram_block11a_31.connectivity_checking = "OFF",
		ram_block11a_31.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_31.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_31.operation_mode = "dual_port",
		ram_block11a_31.port_a_address_width = 6,
		ram_block11a_31.port_a_data_width = 1,
		ram_block11a_31.port_a_first_address = 0,
		ram_block11a_31.port_a_first_bit_number = 31,
		ram_block11a_31.port_a_last_address = 63,
		ram_block11a_31.port_a_logical_ram_depth = 64,
		ram_block11a_31.port_a_logical_ram_width = 64,
		ram_block11a_31.port_b_address_clear = "clear1",
		ram_block11a_31.port_b_address_clock = "clock1",
		ram_block11a_31.port_b_address_width = 6,
		ram_block11a_31.port_b_data_out_clear = "none",
		ram_block11a_31.port_b_data_width = 1,
		ram_block11a_31.port_b_first_address = 0,
		ram_block11a_31.port_b_first_bit_number = 31,
		ram_block11a_31.port_b_last_address = 63,
		ram_block11a_31.port_b_logical_ram_depth = 64,
		ram_block11a_31.port_b_logical_ram_width = 64,
		ram_block11a_31.port_b_read_enable_clock = "clock1",
		ram_block11a_31.ram_block_type = "M9K",
		ram_block11a_31.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_32
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.ena0(wren_a),
	.portaaddr({address_a_wire[5:0]}),
	.portadatain({data_a[32]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[5:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_32portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_32.clk0_core_clock_enable = "ena0",
		ram_block11a_32.clk0_input_clock_enable = "none",
		ram_block11a_32.clk1_core_clock_enable = "none",
		ram_block11a_32.clk1_input_clock_enable = "none",
		ram_block11a_32.connectivity_checking = "OFF",
		ram_block11a_32.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_32.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_32.operation_mode = "dual_port",
		ram_block11a_32.port_a_address_width = 6,
		ram_block11a_32.port_a_data_width = 1,
		ram_block11a_32.port_a_first_address = 0,
		ram_block11a_32.port_a_first_bit_number = 32,
		ram_block11a_32.port_a_last_address = 63,
		ram_block11a_32.port_a_logical_ram_depth = 64,
		ram_block11a_32.port_a_logical_ram_width = 64,
		ram_block11a_32.port_b_address_clear = "clear1",
		ram_block11a_32.port_b_address_clock = "clock1",
		ram_block11a_32.port_b_address_width = 6,
		ram_block11a_32.port_b_data_out_clear = "none",
		ram_block11a_32.port_b_data_width = 1,
		ram_block11a_32.port_b_first_address = 0,
		ram_block11a_32.port_b_first_bit_number = 32,
		ram_block11a_32.port_b_last_address = 63,
		ram_block11a_32.port_b_logical_ram_depth = 64,
		ram_block11a_32.port_b_logical_ram_width = 64,
		ram_block11a_32.port_b_read_enable_clock = "clock1",
		ram_block11a_32.ram_block_type = "M9K",
		ram_block11a_32.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_33
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.ena0(wren_a),
	.portaaddr({address_a_wire[5:0]}),
	.portadatain({data_a[33]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[5:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_33portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_33.clk0_core_clock_enable = "ena0",
		ram_block11a_33.clk0_input_clock_enable = "none",
		ram_block11a_33.clk1_core_clock_enable = "none",
		ram_block11a_33.clk1_input_clock_enable = "none",
		ram_block11a_33.connectivity_checking = "OFF",
		ram_block11a_33.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_33.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_33.operation_mode = "dual_port",
		ram_block11a_33.port_a_address_width = 6,
		ram_block11a_33.port_a_data_width = 1,
		ram_block11a_33.port_a_first_address = 0,
		ram_block11a_33.port_a_first_bit_number = 33,
		ram_block11a_33.port_a_last_address = 63,
		ram_block11a_33.port_a_logical_ram_depth = 64,
		ram_block11a_33.port_a_logical_ram_width = 64,
		ram_block11a_33.port_b_address_clear = "clear1",
		ram_block11a_33.port_b_address_clock = "clock1",
		ram_block11a_33.port_b_address_width = 6,
		ram_block11a_33.port_b_data_out_clear = "none",
		ram_block11a_33.port_b_data_width = 1,
		ram_block11a_33.port_b_first_address = 0,
		ram_block11a_33.port_b_first_bit_number = 33,
		ram_block11a_33.port_b_last_address = 63,
		ram_block11a_33.port_b_logical_ram_depth = 64,
		ram_block11a_33.port_b_logical_ram_width = 64,
		ram_block11a_33.port_b_read_enable_clock = "clock1",
		ram_block11a_33.ram_block_type = "M9K",
		ram_block11a_33.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_34
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.ena0(wren_a),
	.portaaddr({address_a_wire[5:0]}),
	.portadatain({data_a[34]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[5:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_34portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_34.clk0_core_clock_enable = "ena0",
		ram_block11a_34.clk0_input_clock_enable = "none",
		ram_block11a_34.clk1_core_clock_enable = "none",
		ram_block11a_34.clk1_input_clock_enable = "none",
		ram_block11a_34.connectivity_checking = "OFF",
		ram_block11a_34.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_34.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_34.operation_mode = "dual_port",
		ram_block11a_34.port_a_address_width = 6,
		ram_block11a_34.port_a_data_width = 1,
		ram_block11a_34.port_a_first_address = 0,
		ram_block11a_34.port_a_first_bit_number = 34,
		ram_block11a_34.port_a_last_address = 63,
		ram_block11a_34.port_a_logical_ram_depth = 64,
		ram_block11a_34.port_a_logical_ram_width = 64,
		ram_block11a_34.port_b_address_clear = "clear1",
		ram_block11a_34.port_b_address_clock = "clock1",
		ram_block11a_34.port_b_address_width = 6,
		ram_block11a_34.port_b_data_out_clear = "none",
		ram_block11a_34.port_b_data_width = 1,
		ram_block11a_34.port_b_first_address = 0,
		ram_block11a_34.port_b_first_bit_number = 34,
		ram_block11a_34.port_b_last_address = 63,
		ram_block11a_34.port_b_logical_ram_depth = 64,
		ram_block11a_34.port_b_logical_ram_width = 64,
		ram_block11a_34.port_b_read_enable_clock = "clock1",
		ram_block11a_34.ram_block_type = "M9K",
		ram_block11a_34.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_35
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.ena0(wren_a),
	.portaaddr({address_a_wire[5:0]}),
	.portadatain({data_a[35]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[5:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_35portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_35.clk0_core_clock_enable = "ena0",
		ram_block11a_35.clk0_input_clock_enable = "none",
		ram_block11a_35.clk1_core_clock_enable = "none",
		ram_block11a_35.clk1_input_clock_enable = "none",
		ram_block11a_35.connectivity_checking = "OFF",
		ram_block11a_35.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_35.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_35.operation_mode = "dual_port",
		ram_block11a_35.port_a_address_width = 6,
		ram_block11a_35.port_a_data_width = 1,
		ram_block11a_35.port_a_first_address = 0,
		ram_block11a_35.port_a_first_bit_number = 35,
		ram_block11a_35.port_a_last_address = 63,
		ram_block11a_35.port_a_logical_ram_depth = 64,
		ram_block11a_35.port_a_logical_ram_width = 64,
		ram_block11a_35.port_b_address_clear = "clear1",
		ram_block11a_35.port_b_address_clock = "clock1",
		ram_block11a_35.port_b_address_width = 6,
		ram_block11a_35.port_b_data_out_clear = "none",
		ram_block11a_35.port_b_data_width = 1,
		ram_block11a_35.port_b_first_address = 0,
		ram_block11a_35.port_b_first_bit_number = 35,
		ram_block11a_35.port_b_last_address = 63,
		ram_block11a_35.port_b_logical_ram_depth = 64,
		ram_block11a_35.port_b_logical_ram_width = 64,
		ram_block11a_35.port_b_read_enable_clock = "clock1",
		ram_block11a_35.ram_block_type = "M9K",
		ram_block11a_35.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_36
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.ena0(wren_a),
	.portaaddr({address_a_wire[5:0]}),
	.portadatain({data_a[36]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[5:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_36portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_36.clk0_core_clock_enable = "ena0",
		ram_block11a_36.clk0_input_clock_enable = "none",
		ram_block11a_36.clk1_core_clock_enable = "none",
		ram_block11a_36.clk1_input_clock_enable = "none",
		ram_block11a_36.connectivity_checking = "OFF",
		ram_block11a_36.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_36.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_36.operation_mode = "dual_port",
		ram_block11a_36.port_a_address_width = 6,
		ram_block11a_36.port_a_data_width = 1,
		ram_block11a_36.port_a_first_address = 0,
		ram_block11a_36.port_a_first_bit_number = 36,
		ram_block11a_36.port_a_last_address = 63,
		ram_block11a_36.port_a_logical_ram_depth = 64,
		ram_block11a_36.port_a_logical_ram_width = 64,
		ram_block11a_36.port_b_address_clear = "clear1",
		ram_block11a_36.port_b_address_clock = "clock1",
		ram_block11a_36.port_b_address_width = 6,
		ram_block11a_36.port_b_data_out_clear = "none",
		ram_block11a_36.port_b_data_width = 1,
		ram_block11a_36.port_b_first_address = 0,
		ram_block11a_36.port_b_first_bit_number = 36,
		ram_block11a_36.port_b_last_address = 63,
		ram_block11a_36.port_b_logical_ram_depth = 64,
		ram_block11a_36.port_b_logical_ram_width = 64,
		ram_block11a_36.port_b_read_enable_clock = "clock1",
		ram_block11a_36.ram_block_type = "M9K",
		ram_block11a_36.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_37
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.ena0(wren_a),
	.portaaddr({address_a_wire[5:0]}),
	.portadatain({data_a[37]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[5:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_37portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_37.clk0_core_clock_enable = "ena0",
		ram_block11a_37.clk0_input_clock_enable = "none",
		ram_block11a_37.clk1_core_clock_enable = "none",
		ram_block11a_37.clk1_input_clock_enable = "none",
		ram_block11a_37.connectivity_checking = "OFF",
		ram_block11a_37.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_37.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_37.operation_mode = "dual_port",
		ram_block11a_37.port_a_address_width = 6,
		ram_block11a_37.port_a_data_width = 1,
		ram_block11a_37.port_a_first_address = 0,
		ram_block11a_37.port_a_first_bit_number = 37,
		ram_block11a_37.port_a_last_address = 63,
		ram_block11a_37.port_a_logical_ram_depth = 64,
		ram_block11a_37.port_a_logical_ram_width = 64,
		ram_block11a_37.port_b_address_clear = "clear1",
		ram_block11a_37.port_b_address_clock = "clock1",
		ram_block11a_37.port_b_address_width = 6,
		ram_block11a_37.port_b_data_out_clear = "none",
		ram_block11a_37.port_b_data_width = 1,
		ram_block11a_37.port_b_first_address = 0,
		ram_block11a_37.port_b_first_bit_number = 37,
		ram_block11a_37.port_b_last_address = 63,
		ram_block11a_37.port_b_logical_ram_depth = 64,
		ram_block11a_37.port_b_logical_ram_width = 64,
		ram_block11a_37.port_b_read_enable_clock = "clock1",
		ram_block11a_37.ram_block_type = "M9K",
		ram_block11a_37.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_38
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.ena0(wren_a),
	.portaaddr({address_a_wire[5:0]}),
	.portadatain({data_a[38]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[5:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_38portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_38.clk0_core_clock_enable = "ena0",
		ram_block11a_38.clk0_input_clock_enable = "none",
		ram_block11a_38.clk1_core_clock_enable = "none",
		ram_block11a_38.clk1_input_clock_enable = "none",
		ram_block11a_38.connectivity_checking = "OFF",
		ram_block11a_38.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_38.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_38.operation_mode = "dual_port",
		ram_block11a_38.port_a_address_width = 6,
		ram_block11a_38.port_a_data_width = 1,
		ram_block11a_38.port_a_first_address = 0,
		ram_block11a_38.port_a_first_bit_number = 38,
		ram_block11a_38.port_a_last_address = 63,
		ram_block11a_38.port_a_logical_ram_depth = 64,
		ram_block11a_38.port_a_logical_ram_width = 64,
		ram_block11a_38.port_b_address_clear = "clear1",
		ram_block11a_38.port_b_address_clock = "clock1",
		ram_block11a_38.port_b_address_width = 6,
		ram_block11a_38.port_b_data_out_clear = "none",
		ram_block11a_38.port_b_data_width = 1,
		ram_block11a_38.port_b_first_address = 0,
		ram_block11a_38.port_b_first_bit_number = 38,
		ram_block11a_38.port_b_last_address = 63,
		ram_block11a_38.port_b_logical_ram_depth = 64,
		ram_block11a_38.port_b_logical_ram_width = 64,
		ram_block11a_38.port_b_read_enable_clock = "clock1",
		ram_block11a_38.ram_block_type = "M9K",
		ram_block11a_38.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_39
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.ena0(wren_a),
	.portaaddr({address_a_wire[5:0]}),
	.portadatain({data_a[39]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[5:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_39portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_39.clk0_core_clock_enable = "ena0",
		ram_block11a_39.clk0_input_clock_enable = "none",
		ram_block11a_39.clk1_core_clock_enable = "none",
		ram_block11a_39.clk1_input_clock_enable = "none",
		ram_block11a_39.connectivity_checking = "OFF",
		ram_block11a_39.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_39.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_39.operation_mode = "dual_port",
		ram_block11a_39.port_a_address_width = 6,
		ram_block11a_39.port_a_data_width = 1,
		ram_block11a_39.port_a_first_address = 0,
		ram_block11a_39.port_a_first_bit_number = 39,
		ram_block11a_39.port_a_last_address = 63,
		ram_block11a_39.port_a_logical_ram_depth = 64,
		ram_block11a_39.port_a_logical_ram_width = 64,
		ram_block11a_39.port_b_address_clear = "clear1",
		ram_block11a_39.port_b_address_clock = "clock1",
		ram_block11a_39.port_b_address_width = 6,
		ram_block11a_39.port_b_data_out_clear = "none",
		ram_block11a_39.port_b_data_width = 1,
		ram_block11a_39.port_b_first_address = 0,
		ram_block11a_39.port_b_first_bit_number = 39,
		ram_block11a_39.port_b_last_address = 63,
		ram_block11a_39.port_b_logical_ram_depth = 64,
		ram_block11a_39.port_b_logical_ram_width = 64,
		ram_block11a_39.port_b_read_enable_clock = "clock1",
		ram_block11a_39.ram_block_type = "M9K",
		ram_block11a_39.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_40
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.ena0(wren_a),
	.portaaddr({address_a_wire[5:0]}),
	.portadatain({data_a[40]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[5:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_40portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_40.clk0_core_clock_enable = "ena0",
		ram_block11a_40.clk0_input_clock_enable = "none",
		ram_block11a_40.clk1_core_clock_enable = "none",
		ram_block11a_40.clk1_input_clock_enable = "none",
		ram_block11a_40.connectivity_checking = "OFF",
		ram_block11a_40.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_40.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_40.operation_mode = "dual_port",
		ram_block11a_40.port_a_address_width = 6,
		ram_block11a_40.port_a_data_width = 1,
		ram_block11a_40.port_a_first_address = 0,
		ram_block11a_40.port_a_first_bit_number = 40,
		ram_block11a_40.port_a_last_address = 63,
		ram_block11a_40.port_a_logical_ram_depth = 64,
		ram_block11a_40.port_a_logical_ram_width = 64,
		ram_block11a_40.port_b_address_clear = "clear1",
		ram_block11a_40.port_b_address_clock = "clock1",
		ram_block11a_40.port_b_address_width = 6,
		ram_block11a_40.port_b_data_out_clear = "none",
		ram_block11a_40.port_b_data_width = 1,
		ram_block11a_40.port_b_first_address = 0,
		ram_block11a_40.port_b_first_bit_number = 40,
		ram_block11a_40.port_b_last_address = 63,
		ram_block11a_40.port_b_logical_ram_depth = 64,
		ram_block11a_40.port_b_logical_ram_width = 64,
		ram_block11a_40.port_b_read_enable_clock = "clock1",
		ram_block11a_40.ram_block_type = "M9K",
		ram_block11a_40.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_41
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.ena0(wren_a),
	.portaaddr({address_a_wire[5:0]}),
	.portadatain({data_a[41]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[5:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_41portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_41.clk0_core_clock_enable = "ena0",
		ram_block11a_41.clk0_input_clock_enable = "none",
		ram_block11a_41.clk1_core_clock_enable = "none",
		ram_block11a_41.clk1_input_clock_enable = "none",
		ram_block11a_41.connectivity_checking = "OFF",
		ram_block11a_41.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_41.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_41.operation_mode = "dual_port",
		ram_block11a_41.port_a_address_width = 6,
		ram_block11a_41.port_a_data_width = 1,
		ram_block11a_41.port_a_first_address = 0,
		ram_block11a_41.port_a_first_bit_number = 41,
		ram_block11a_41.port_a_last_address = 63,
		ram_block11a_41.port_a_logical_ram_depth = 64,
		ram_block11a_41.port_a_logical_ram_width = 64,
		ram_block11a_41.port_b_address_clear = "clear1",
		ram_block11a_41.port_b_address_clock = "clock1",
		ram_block11a_41.port_b_address_width = 6,
		ram_block11a_41.port_b_data_out_clear = "none",
		ram_block11a_41.port_b_data_width = 1,
		ram_block11a_41.port_b_first_address = 0,
		ram_block11a_41.port_b_first_bit_number = 41,
		ram_block11a_41.port_b_last_address = 63,
		ram_block11a_41.port_b_logical_ram_depth = 64,
		ram_block11a_41.port_b_logical_ram_width = 64,
		ram_block11a_41.port_b_read_enable_clock = "clock1",
		ram_block11a_41.ram_block_type = "M9K",
		ram_block11a_41.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_42
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.ena0(wren_a),
	.portaaddr({address_a_wire[5:0]}),
	.portadatain({data_a[42]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[5:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_42portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_42.clk0_core_clock_enable = "ena0",
		ram_block11a_42.clk0_input_clock_enable = "none",
		ram_block11a_42.clk1_core_clock_enable = "none",
		ram_block11a_42.clk1_input_clock_enable = "none",
		ram_block11a_42.connectivity_checking = "OFF",
		ram_block11a_42.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_42.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_42.operation_mode = "dual_port",
		ram_block11a_42.port_a_address_width = 6,
		ram_block11a_42.port_a_data_width = 1,
		ram_block11a_42.port_a_first_address = 0,
		ram_block11a_42.port_a_first_bit_number = 42,
		ram_block11a_42.port_a_last_address = 63,
		ram_block11a_42.port_a_logical_ram_depth = 64,
		ram_block11a_42.port_a_logical_ram_width = 64,
		ram_block11a_42.port_b_address_clear = "clear1",
		ram_block11a_42.port_b_address_clock = "clock1",
		ram_block11a_42.port_b_address_width = 6,
		ram_block11a_42.port_b_data_out_clear = "none",
		ram_block11a_42.port_b_data_width = 1,
		ram_block11a_42.port_b_first_address = 0,
		ram_block11a_42.port_b_first_bit_number = 42,
		ram_block11a_42.port_b_last_address = 63,
		ram_block11a_42.port_b_logical_ram_depth = 64,
		ram_block11a_42.port_b_logical_ram_width = 64,
		ram_block11a_42.port_b_read_enable_clock = "clock1",
		ram_block11a_42.ram_block_type = "M9K",
		ram_block11a_42.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_43
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.ena0(wren_a),
	.portaaddr({address_a_wire[5:0]}),
	.portadatain({data_a[43]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[5:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_43portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_43.clk0_core_clock_enable = "ena0",
		ram_block11a_43.clk0_input_clock_enable = "none",
		ram_block11a_43.clk1_core_clock_enable = "none",
		ram_block11a_43.clk1_input_clock_enable = "none",
		ram_block11a_43.connectivity_checking = "OFF",
		ram_block11a_43.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_43.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_43.operation_mode = "dual_port",
		ram_block11a_43.port_a_address_width = 6,
		ram_block11a_43.port_a_data_width = 1,
		ram_block11a_43.port_a_first_address = 0,
		ram_block11a_43.port_a_first_bit_number = 43,
		ram_block11a_43.port_a_last_address = 63,
		ram_block11a_43.port_a_logical_ram_depth = 64,
		ram_block11a_43.port_a_logical_ram_width = 64,
		ram_block11a_43.port_b_address_clear = "clear1",
		ram_block11a_43.port_b_address_clock = "clock1",
		ram_block11a_43.port_b_address_width = 6,
		ram_block11a_43.port_b_data_out_clear = "none",
		ram_block11a_43.port_b_data_width = 1,
		ram_block11a_43.port_b_first_address = 0,
		ram_block11a_43.port_b_first_bit_number = 43,
		ram_block11a_43.port_b_last_address = 63,
		ram_block11a_43.port_b_logical_ram_depth = 64,
		ram_block11a_43.port_b_logical_ram_width = 64,
		ram_block11a_43.port_b_read_enable_clock = "clock1",
		ram_block11a_43.ram_block_type = "M9K",
		ram_block11a_43.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_44
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.ena0(wren_a),
	.portaaddr({address_a_wire[5:0]}),
	.portadatain({data_a[44]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[5:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_44portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_44.clk0_core_clock_enable = "ena0",
		ram_block11a_44.clk0_input_clock_enable = "none",
		ram_block11a_44.clk1_core_clock_enable = "none",
		ram_block11a_44.clk1_input_clock_enable = "none",
		ram_block11a_44.connectivity_checking = "OFF",
		ram_block11a_44.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_44.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_44.operation_mode = "dual_port",
		ram_block11a_44.port_a_address_width = 6,
		ram_block11a_44.port_a_data_width = 1,
		ram_block11a_44.port_a_first_address = 0,
		ram_block11a_44.port_a_first_bit_number = 44,
		ram_block11a_44.port_a_last_address = 63,
		ram_block11a_44.port_a_logical_ram_depth = 64,
		ram_block11a_44.port_a_logical_ram_width = 64,
		ram_block11a_44.port_b_address_clear = "clear1",
		ram_block11a_44.port_b_address_clock = "clock1",
		ram_block11a_44.port_b_address_width = 6,
		ram_block11a_44.port_b_data_out_clear = "none",
		ram_block11a_44.port_b_data_width = 1,
		ram_block11a_44.port_b_first_address = 0,
		ram_block11a_44.port_b_first_bit_number = 44,
		ram_block11a_44.port_b_last_address = 63,
		ram_block11a_44.port_b_logical_ram_depth = 64,
		ram_block11a_44.port_b_logical_ram_width = 64,
		ram_block11a_44.port_b_read_enable_clock = "clock1",
		ram_block11a_44.ram_block_type = "M9K",
		ram_block11a_44.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_45
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.ena0(wren_a),
	.portaaddr({address_a_wire[5:0]}),
	.portadatain({data_a[45]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[5:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_45portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_45.clk0_core_clock_enable = "ena0",
		ram_block11a_45.clk0_input_clock_enable = "none",
		ram_block11a_45.clk1_core_clock_enable = "none",
		ram_block11a_45.clk1_input_clock_enable = "none",
		ram_block11a_45.connectivity_checking = "OFF",
		ram_block11a_45.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_45.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_45.operation_mode = "dual_port",
		ram_block11a_45.port_a_address_width = 6,
		ram_block11a_45.port_a_data_width = 1,
		ram_block11a_45.port_a_first_address = 0,
		ram_block11a_45.port_a_first_bit_number = 45,
		ram_block11a_45.port_a_last_address = 63,
		ram_block11a_45.port_a_logical_ram_depth = 64,
		ram_block11a_45.port_a_logical_ram_width = 64,
		ram_block11a_45.port_b_address_clear = "clear1",
		ram_block11a_45.port_b_address_clock = "clock1",
		ram_block11a_45.port_b_address_width = 6,
		ram_block11a_45.port_b_data_out_clear = "none",
		ram_block11a_45.port_b_data_width = 1,
		ram_block11a_45.port_b_first_address = 0,
		ram_block11a_45.port_b_first_bit_number = 45,
		ram_block11a_45.port_b_last_address = 63,
		ram_block11a_45.port_b_logical_ram_depth = 64,
		ram_block11a_45.port_b_logical_ram_width = 64,
		ram_block11a_45.port_b_read_enable_clock = "clock1",
		ram_block11a_45.ram_block_type = "M9K",
		ram_block11a_45.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_46
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.ena0(wren_a),
	.portaaddr({address_a_wire[5:0]}),
	.portadatain({data_a[46]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[5:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_46portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_46.clk0_core_clock_enable = "ena0",
		ram_block11a_46.clk0_input_clock_enable = "none",
		ram_block11a_46.clk1_core_clock_enable = "none",
		ram_block11a_46.clk1_input_clock_enable = "none",
		ram_block11a_46.connectivity_checking = "OFF",
		ram_block11a_46.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_46.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_46.operation_mode = "dual_port",
		ram_block11a_46.port_a_address_width = 6,
		ram_block11a_46.port_a_data_width = 1,
		ram_block11a_46.port_a_first_address = 0,
		ram_block11a_46.port_a_first_bit_number = 46,
		ram_block11a_46.port_a_last_address = 63,
		ram_block11a_46.port_a_logical_ram_depth = 64,
		ram_block11a_46.port_a_logical_ram_width = 64,
		ram_block11a_46.port_b_address_clear = "clear1",
		ram_block11a_46.port_b_address_clock = "clock1",
		ram_block11a_46.port_b_address_width = 6,
		ram_block11a_46.port_b_data_out_clear = "none",
		ram_block11a_46.port_b_data_width = 1,
		ram_block11a_46.port_b_first_address = 0,
		ram_block11a_46.port_b_first_bit_number = 46,
		ram_block11a_46.port_b_last_address = 63,
		ram_block11a_46.port_b_logical_ram_depth = 64,
		ram_block11a_46.port_b_logical_ram_width = 64,
		ram_block11a_46.port_b_read_enable_clock = "clock1",
		ram_block11a_46.ram_block_type = "M9K",
		ram_block11a_46.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_47
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.ena0(wren_a),
	.portaaddr({address_a_wire[5:0]}),
	.portadatain({data_a[47]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[5:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_47portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_47.clk0_core_clock_enable = "ena0",
		ram_block11a_47.clk0_input_clock_enable = "none",
		ram_block11a_47.clk1_core_clock_enable = "none",
		ram_block11a_47.clk1_input_clock_enable = "none",
		ram_block11a_47.connectivity_checking = "OFF",
		ram_block11a_47.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_47.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_47.operation_mode = "dual_port",
		ram_block11a_47.port_a_address_width = 6,
		ram_block11a_47.port_a_data_width = 1,
		ram_block11a_47.port_a_first_address = 0,
		ram_block11a_47.port_a_first_bit_number = 47,
		ram_block11a_47.port_a_last_address = 63,
		ram_block11a_47.port_a_logical_ram_depth = 64,
		ram_block11a_47.port_a_logical_ram_width = 64,
		ram_block11a_47.port_b_address_clear = "clear1",
		ram_block11a_47.port_b_address_clock = "clock1",
		ram_block11a_47.port_b_address_width = 6,
		ram_block11a_47.port_b_data_out_clear = "none",
		ram_block11a_47.port_b_data_width = 1,
		ram_block11a_47.port_b_first_address = 0,
		ram_block11a_47.port_b_first_bit_number = 47,
		ram_block11a_47.port_b_last_address = 63,
		ram_block11a_47.port_b_logical_ram_depth = 64,
		ram_block11a_47.port_b_logical_ram_width = 64,
		ram_block11a_47.port_b_read_enable_clock = "clock1",
		ram_block11a_47.ram_block_type = "M9K",
		ram_block11a_47.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_48
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.ena0(wren_a),
	.portaaddr({address_a_wire[5:0]}),
	.portadatain({data_a[48]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[5:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_48portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_48.clk0_core_clock_enable = "ena0",
		ram_block11a_48.clk0_input_clock_enable = "none",
		ram_block11a_48.clk1_core_clock_enable = "none",
		ram_block11a_48.clk1_input_clock_enable = "none",
		ram_block11a_48.connectivity_checking = "OFF",
		ram_block11a_48.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_48.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_48.operation_mode = "dual_port",
		ram_block11a_48.port_a_address_width = 6,
		ram_block11a_48.port_a_data_width = 1,
		ram_block11a_48.port_a_first_address = 0,
		ram_block11a_48.port_a_first_bit_number = 48,
		ram_block11a_48.port_a_last_address = 63,
		ram_block11a_48.port_a_logical_ram_depth = 64,
		ram_block11a_48.port_a_logical_ram_width = 64,
		ram_block11a_48.port_b_address_clear = "clear1",
		ram_block11a_48.port_b_address_clock = "clock1",
		ram_block11a_48.port_b_address_width = 6,
		ram_block11a_48.port_b_data_out_clear = "none",
		ram_block11a_48.port_b_data_width = 1,
		ram_block11a_48.port_b_first_address = 0,
		ram_block11a_48.port_b_first_bit_number = 48,
		ram_block11a_48.port_b_last_address = 63,
		ram_block11a_48.port_b_logical_ram_depth = 64,
		ram_block11a_48.port_b_logical_ram_width = 64,
		ram_block11a_48.port_b_read_enable_clock = "clock1",
		ram_block11a_48.ram_block_type = "M9K",
		ram_block11a_48.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_49
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.ena0(wren_a),
	.portaaddr({address_a_wire[5:0]}),
	.portadatain({data_a[49]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[5:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_49portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_49.clk0_core_clock_enable = "ena0",
		ram_block11a_49.clk0_input_clock_enable = "none",
		ram_block11a_49.clk1_core_clock_enable = "none",
		ram_block11a_49.clk1_input_clock_enable = "none",
		ram_block11a_49.connectivity_checking = "OFF",
		ram_block11a_49.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_49.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_49.operation_mode = "dual_port",
		ram_block11a_49.port_a_address_width = 6,
		ram_block11a_49.port_a_data_width = 1,
		ram_block11a_49.port_a_first_address = 0,
		ram_block11a_49.port_a_first_bit_number = 49,
		ram_block11a_49.port_a_last_address = 63,
		ram_block11a_49.port_a_logical_ram_depth = 64,
		ram_block11a_49.port_a_logical_ram_width = 64,
		ram_block11a_49.port_b_address_clear = "clear1",
		ram_block11a_49.port_b_address_clock = "clock1",
		ram_block11a_49.port_b_address_width = 6,
		ram_block11a_49.port_b_data_out_clear = "none",
		ram_block11a_49.port_b_data_width = 1,
		ram_block11a_49.port_b_first_address = 0,
		ram_block11a_49.port_b_first_bit_number = 49,
		ram_block11a_49.port_b_last_address = 63,
		ram_block11a_49.port_b_logical_ram_depth = 64,
		ram_block11a_49.port_b_logical_ram_width = 64,
		ram_block11a_49.port_b_read_enable_clock = "clock1",
		ram_block11a_49.ram_block_type = "M9K",
		ram_block11a_49.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_50
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.ena0(wren_a),
	.portaaddr({address_a_wire[5:0]}),
	.portadatain({data_a[50]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[5:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_50portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_50.clk0_core_clock_enable = "ena0",
		ram_block11a_50.clk0_input_clock_enable = "none",
		ram_block11a_50.clk1_core_clock_enable = "none",
		ram_block11a_50.clk1_input_clock_enable = "none",
		ram_block11a_50.connectivity_checking = "OFF",
		ram_block11a_50.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_50.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_50.operation_mode = "dual_port",
		ram_block11a_50.port_a_address_width = 6,
		ram_block11a_50.port_a_data_width = 1,
		ram_block11a_50.port_a_first_address = 0,
		ram_block11a_50.port_a_first_bit_number = 50,
		ram_block11a_50.port_a_last_address = 63,
		ram_block11a_50.port_a_logical_ram_depth = 64,
		ram_block11a_50.port_a_logical_ram_width = 64,
		ram_block11a_50.port_b_address_clear = "clear1",
		ram_block11a_50.port_b_address_clock = "clock1",
		ram_block11a_50.port_b_address_width = 6,
		ram_block11a_50.port_b_data_out_clear = "none",
		ram_block11a_50.port_b_data_width = 1,
		ram_block11a_50.port_b_first_address = 0,
		ram_block11a_50.port_b_first_bit_number = 50,
		ram_block11a_50.port_b_last_address = 63,
		ram_block11a_50.port_b_logical_ram_depth = 64,
		ram_block11a_50.port_b_logical_ram_width = 64,
		ram_block11a_50.port_b_read_enable_clock = "clock1",
		ram_block11a_50.ram_block_type = "M9K",
		ram_block11a_50.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_51
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.ena0(wren_a),
	.portaaddr({address_a_wire[5:0]}),
	.portadatain({data_a[51]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[5:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_51portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_51.clk0_core_clock_enable = "ena0",
		ram_block11a_51.clk0_input_clock_enable = "none",
		ram_block11a_51.clk1_core_clock_enable = "none",
		ram_block11a_51.clk1_input_clock_enable = "none",
		ram_block11a_51.connectivity_checking = "OFF",
		ram_block11a_51.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_51.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_51.operation_mode = "dual_port",
		ram_block11a_51.port_a_address_width = 6,
		ram_block11a_51.port_a_data_width = 1,
		ram_block11a_51.port_a_first_address = 0,
		ram_block11a_51.port_a_first_bit_number = 51,
		ram_block11a_51.port_a_last_address = 63,
		ram_block11a_51.port_a_logical_ram_depth = 64,
		ram_block11a_51.port_a_logical_ram_width = 64,
		ram_block11a_51.port_b_address_clear = "clear1",
		ram_block11a_51.port_b_address_clock = "clock1",
		ram_block11a_51.port_b_address_width = 6,
		ram_block11a_51.port_b_data_out_clear = "none",
		ram_block11a_51.port_b_data_width = 1,
		ram_block11a_51.port_b_first_address = 0,
		ram_block11a_51.port_b_first_bit_number = 51,
		ram_block11a_51.port_b_last_address = 63,
		ram_block11a_51.port_b_logical_ram_depth = 64,
		ram_block11a_51.port_b_logical_ram_width = 64,
		ram_block11a_51.port_b_read_enable_clock = "clock1",
		ram_block11a_51.ram_block_type = "M9K",
		ram_block11a_51.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_52
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.ena0(wren_a),
	.portaaddr({address_a_wire[5:0]}),
	.portadatain({data_a[52]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[5:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_52portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_52.clk0_core_clock_enable = "ena0",
		ram_block11a_52.clk0_input_clock_enable = "none",
		ram_block11a_52.clk1_core_clock_enable = "none",
		ram_block11a_52.clk1_input_clock_enable = "none",
		ram_block11a_52.connectivity_checking = "OFF",
		ram_block11a_52.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_52.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_52.operation_mode = "dual_port",
		ram_block11a_52.port_a_address_width = 6,
		ram_block11a_52.port_a_data_width = 1,
		ram_block11a_52.port_a_first_address = 0,
		ram_block11a_52.port_a_first_bit_number = 52,
		ram_block11a_52.port_a_last_address = 63,
		ram_block11a_52.port_a_logical_ram_depth = 64,
		ram_block11a_52.port_a_logical_ram_width = 64,
		ram_block11a_52.port_b_address_clear = "clear1",
		ram_block11a_52.port_b_address_clock = "clock1",
		ram_block11a_52.port_b_address_width = 6,
		ram_block11a_52.port_b_data_out_clear = "none",
		ram_block11a_52.port_b_data_width = 1,
		ram_block11a_52.port_b_first_address = 0,
		ram_block11a_52.port_b_first_bit_number = 52,
		ram_block11a_52.port_b_last_address = 63,
		ram_block11a_52.port_b_logical_ram_depth = 64,
		ram_block11a_52.port_b_logical_ram_width = 64,
		ram_block11a_52.port_b_read_enable_clock = "clock1",
		ram_block11a_52.ram_block_type = "M9K",
		ram_block11a_52.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_53
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.ena0(wren_a),
	.portaaddr({address_a_wire[5:0]}),
	.portadatain({data_a[53]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[5:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_53portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_53.clk0_core_clock_enable = "ena0",
		ram_block11a_53.clk0_input_clock_enable = "none",
		ram_block11a_53.clk1_core_clock_enable = "none",
		ram_block11a_53.clk1_input_clock_enable = "none",
		ram_block11a_53.connectivity_checking = "OFF",
		ram_block11a_53.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_53.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_53.operation_mode = "dual_port",
		ram_block11a_53.port_a_address_width = 6,
		ram_block11a_53.port_a_data_width = 1,
		ram_block11a_53.port_a_first_address = 0,
		ram_block11a_53.port_a_first_bit_number = 53,
		ram_block11a_53.port_a_last_address = 63,
		ram_block11a_53.port_a_logical_ram_depth = 64,
		ram_block11a_53.port_a_logical_ram_width = 64,
		ram_block11a_53.port_b_address_clear = "clear1",
		ram_block11a_53.port_b_address_clock = "clock1",
		ram_block11a_53.port_b_address_width = 6,
		ram_block11a_53.port_b_data_out_clear = "none",
		ram_block11a_53.port_b_data_width = 1,
		ram_block11a_53.port_b_first_address = 0,
		ram_block11a_53.port_b_first_bit_number = 53,
		ram_block11a_53.port_b_last_address = 63,
		ram_block11a_53.port_b_logical_ram_depth = 64,
		ram_block11a_53.port_b_logical_ram_width = 64,
		ram_block11a_53.port_b_read_enable_clock = "clock1",
		ram_block11a_53.ram_block_type = "M9K",
		ram_block11a_53.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_54
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.ena0(wren_a),
	.portaaddr({address_a_wire[5:0]}),
	.portadatain({data_a[54]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[5:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_54portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_54.clk0_core_clock_enable = "ena0",
		ram_block11a_54.clk0_input_clock_enable = "none",
		ram_block11a_54.clk1_core_clock_enable = "none",
		ram_block11a_54.clk1_input_clock_enable = "none",
		ram_block11a_54.connectivity_checking = "OFF",
		ram_block11a_54.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_54.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_54.operation_mode = "dual_port",
		ram_block11a_54.port_a_address_width = 6,
		ram_block11a_54.port_a_data_width = 1,
		ram_block11a_54.port_a_first_address = 0,
		ram_block11a_54.port_a_first_bit_number = 54,
		ram_block11a_54.port_a_last_address = 63,
		ram_block11a_54.port_a_logical_ram_depth = 64,
		ram_block11a_54.port_a_logical_ram_width = 64,
		ram_block11a_54.port_b_address_clear = "clear1",
		ram_block11a_54.port_b_address_clock = "clock1",
		ram_block11a_54.port_b_address_width = 6,
		ram_block11a_54.port_b_data_out_clear = "none",
		ram_block11a_54.port_b_data_width = 1,
		ram_block11a_54.port_b_first_address = 0,
		ram_block11a_54.port_b_first_bit_number = 54,
		ram_block11a_54.port_b_last_address = 63,
		ram_block11a_54.port_b_logical_ram_depth = 64,
		ram_block11a_54.port_b_logical_ram_width = 64,
		ram_block11a_54.port_b_read_enable_clock = "clock1",
		ram_block11a_54.ram_block_type = "M9K",
		ram_block11a_54.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_55
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.ena0(wren_a),
	.portaaddr({address_a_wire[5:0]}),
	.portadatain({data_a[55]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[5:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_55portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_55.clk0_core_clock_enable = "ena0",
		ram_block11a_55.clk0_input_clock_enable = "none",
		ram_block11a_55.clk1_core_clock_enable = "none",
		ram_block11a_55.clk1_input_clock_enable = "none",
		ram_block11a_55.connectivity_checking = "OFF",
		ram_block11a_55.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_55.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_55.operation_mode = "dual_port",
		ram_block11a_55.port_a_address_width = 6,
		ram_block11a_55.port_a_data_width = 1,
		ram_block11a_55.port_a_first_address = 0,
		ram_block11a_55.port_a_first_bit_number = 55,
		ram_block11a_55.port_a_last_address = 63,
		ram_block11a_55.port_a_logical_ram_depth = 64,
		ram_block11a_55.port_a_logical_ram_width = 64,
		ram_block11a_55.port_b_address_clear = "clear1",
		ram_block11a_55.port_b_address_clock = "clock1",
		ram_block11a_55.port_b_address_width = 6,
		ram_block11a_55.port_b_data_out_clear = "none",
		ram_block11a_55.port_b_data_width = 1,
		ram_block11a_55.port_b_first_address = 0,
		ram_block11a_55.port_b_first_bit_number = 55,
		ram_block11a_55.port_b_last_address = 63,
		ram_block11a_55.port_b_logical_ram_depth = 64,
		ram_block11a_55.port_b_logical_ram_width = 64,
		ram_block11a_55.port_b_read_enable_clock = "clock1",
		ram_block11a_55.ram_block_type = "M9K",
		ram_block11a_55.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_56
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.ena0(wren_a),
	.portaaddr({address_a_wire[5:0]}),
	.portadatain({data_a[56]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[5:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_56portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_56.clk0_core_clock_enable = "ena0",
		ram_block11a_56.clk0_input_clock_enable = "none",
		ram_block11a_56.clk1_core_clock_enable = "none",
		ram_block11a_56.clk1_input_clock_enable = "none",
		ram_block11a_56.connectivity_checking = "OFF",
		ram_block11a_56.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_56.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_56.operation_mode = "dual_port",
		ram_block11a_56.port_a_address_width = 6,
		ram_block11a_56.port_a_data_width = 1,
		ram_block11a_56.port_a_first_address = 0,
		ram_block11a_56.port_a_first_bit_number = 56,
		ram_block11a_56.port_a_last_address = 63,
		ram_block11a_56.port_a_logical_ram_depth = 64,
		ram_block11a_56.port_a_logical_ram_width = 64,
		ram_block11a_56.port_b_address_clear = "clear1",
		ram_block11a_56.port_b_address_clock = "clock1",
		ram_block11a_56.port_b_address_width = 6,
		ram_block11a_56.port_b_data_out_clear = "none",
		ram_block11a_56.port_b_data_width = 1,
		ram_block11a_56.port_b_first_address = 0,
		ram_block11a_56.port_b_first_bit_number = 56,
		ram_block11a_56.port_b_last_address = 63,
		ram_block11a_56.port_b_logical_ram_depth = 64,
		ram_block11a_56.port_b_logical_ram_width = 64,
		ram_block11a_56.port_b_read_enable_clock = "clock1",
		ram_block11a_56.ram_block_type = "M9K",
		ram_block11a_56.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_57
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.ena0(wren_a),
	.portaaddr({address_a_wire[5:0]}),
	.portadatain({data_a[57]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[5:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_57portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_57.clk0_core_clock_enable = "ena0",
		ram_block11a_57.clk0_input_clock_enable = "none",
		ram_block11a_57.clk1_core_clock_enable = "none",
		ram_block11a_57.clk1_input_clock_enable = "none",
		ram_block11a_57.connectivity_checking = "OFF",
		ram_block11a_57.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_57.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_57.operation_mode = "dual_port",
		ram_block11a_57.port_a_address_width = 6,
		ram_block11a_57.port_a_data_width = 1,
		ram_block11a_57.port_a_first_address = 0,
		ram_block11a_57.port_a_first_bit_number = 57,
		ram_block11a_57.port_a_last_address = 63,
		ram_block11a_57.port_a_logical_ram_depth = 64,
		ram_block11a_57.port_a_logical_ram_width = 64,
		ram_block11a_57.port_b_address_clear = "clear1",
		ram_block11a_57.port_b_address_clock = "clock1",
		ram_block11a_57.port_b_address_width = 6,
		ram_block11a_57.port_b_data_out_clear = "none",
		ram_block11a_57.port_b_data_width = 1,
		ram_block11a_57.port_b_first_address = 0,
		ram_block11a_57.port_b_first_bit_number = 57,
		ram_block11a_57.port_b_last_address = 63,
		ram_block11a_57.port_b_logical_ram_depth = 64,
		ram_block11a_57.port_b_logical_ram_width = 64,
		ram_block11a_57.port_b_read_enable_clock = "clock1",
		ram_block11a_57.ram_block_type = "M9K",
		ram_block11a_57.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_58
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.ena0(wren_a),
	.portaaddr({address_a_wire[5:0]}),
	.portadatain({data_a[58]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[5:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_58portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_58.clk0_core_clock_enable = "ena0",
		ram_block11a_58.clk0_input_clock_enable = "none",
		ram_block11a_58.clk1_core_clock_enable = "none",
		ram_block11a_58.clk1_input_clock_enable = "none",
		ram_block11a_58.connectivity_checking = "OFF",
		ram_block11a_58.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_58.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_58.operation_mode = "dual_port",
		ram_block11a_58.port_a_address_width = 6,
		ram_block11a_58.port_a_data_width = 1,
		ram_block11a_58.port_a_first_address = 0,
		ram_block11a_58.port_a_first_bit_number = 58,
		ram_block11a_58.port_a_last_address = 63,
		ram_block11a_58.port_a_logical_ram_depth = 64,
		ram_block11a_58.port_a_logical_ram_width = 64,
		ram_block11a_58.port_b_address_clear = "clear1",
		ram_block11a_58.port_b_address_clock = "clock1",
		ram_block11a_58.port_b_address_width = 6,
		ram_block11a_58.port_b_data_out_clear = "none",
		ram_block11a_58.port_b_data_width = 1,
		ram_block11a_58.port_b_first_address = 0,
		ram_block11a_58.port_b_first_bit_number = 58,
		ram_block11a_58.port_b_last_address = 63,
		ram_block11a_58.port_b_logical_ram_depth = 64,
		ram_block11a_58.port_b_logical_ram_width = 64,
		ram_block11a_58.port_b_read_enable_clock = "clock1",
		ram_block11a_58.ram_block_type = "M9K",
		ram_block11a_58.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_59
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.ena0(wren_a),
	.portaaddr({address_a_wire[5:0]}),
	.portadatain({data_a[59]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[5:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_59portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_59.clk0_core_clock_enable = "ena0",
		ram_block11a_59.clk0_input_clock_enable = "none",
		ram_block11a_59.clk1_core_clock_enable = "none",
		ram_block11a_59.clk1_input_clock_enable = "none",
		ram_block11a_59.connectivity_checking = "OFF",
		ram_block11a_59.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_59.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_59.operation_mode = "dual_port",
		ram_block11a_59.port_a_address_width = 6,
		ram_block11a_59.port_a_data_width = 1,
		ram_block11a_59.port_a_first_address = 0,
		ram_block11a_59.port_a_first_bit_number = 59,
		ram_block11a_59.port_a_last_address = 63,
		ram_block11a_59.port_a_logical_ram_depth = 64,
		ram_block11a_59.port_a_logical_ram_width = 64,
		ram_block11a_59.port_b_address_clear = "clear1",
		ram_block11a_59.port_b_address_clock = "clock1",
		ram_block11a_59.port_b_address_width = 6,
		ram_block11a_59.port_b_data_out_clear = "none",
		ram_block11a_59.port_b_data_width = 1,
		ram_block11a_59.port_b_first_address = 0,
		ram_block11a_59.port_b_first_bit_number = 59,
		ram_block11a_59.port_b_last_address = 63,
		ram_block11a_59.port_b_logical_ram_depth = 64,
		ram_block11a_59.port_b_logical_ram_width = 64,
		ram_block11a_59.port_b_read_enable_clock = "clock1",
		ram_block11a_59.ram_block_type = "M9K",
		ram_block11a_59.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_60
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.ena0(wren_a),
	.portaaddr({address_a_wire[5:0]}),
	.portadatain({data_a[60]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[5:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_60portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_60.clk0_core_clock_enable = "ena0",
		ram_block11a_60.clk0_input_clock_enable = "none",
		ram_block11a_60.clk1_core_clock_enable = "none",
		ram_block11a_60.clk1_input_clock_enable = "none",
		ram_block11a_60.connectivity_checking = "OFF",
		ram_block11a_60.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_60.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_60.operation_mode = "dual_port",
		ram_block11a_60.port_a_address_width = 6,
		ram_block11a_60.port_a_data_width = 1,
		ram_block11a_60.port_a_first_address = 0,
		ram_block11a_60.port_a_first_bit_number = 60,
		ram_block11a_60.port_a_last_address = 63,
		ram_block11a_60.port_a_logical_ram_depth = 64,
		ram_block11a_60.port_a_logical_ram_width = 64,
		ram_block11a_60.port_b_address_clear = "clear1",
		ram_block11a_60.port_b_address_clock = "clock1",
		ram_block11a_60.port_b_address_width = 6,
		ram_block11a_60.port_b_data_out_clear = "none",
		ram_block11a_60.port_b_data_width = 1,
		ram_block11a_60.port_b_first_address = 0,
		ram_block11a_60.port_b_first_bit_number = 60,
		ram_block11a_60.port_b_last_address = 63,
		ram_block11a_60.port_b_logical_ram_depth = 64,
		ram_block11a_60.port_b_logical_ram_width = 64,
		ram_block11a_60.port_b_read_enable_clock = "clock1",
		ram_block11a_60.ram_block_type = "M9K",
		ram_block11a_60.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_61
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.ena0(wren_a),
	.portaaddr({address_a_wire[5:0]}),
	.portadatain({data_a[61]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[5:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_61portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_61.clk0_core_clock_enable = "ena0",
		ram_block11a_61.clk0_input_clock_enable = "none",
		ram_block11a_61.clk1_core_clock_enable = "none",
		ram_block11a_61.clk1_input_clock_enable = "none",
		ram_block11a_61.connectivity_checking = "OFF",
		ram_block11a_61.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_61.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_61.operation_mode = "dual_port",
		ram_block11a_61.port_a_address_width = 6,
		ram_block11a_61.port_a_data_width = 1,
		ram_block11a_61.port_a_first_address = 0,
		ram_block11a_61.port_a_first_bit_number = 61,
		ram_block11a_61.port_a_last_address = 63,
		ram_block11a_61.port_a_logical_ram_depth = 64,
		ram_block11a_61.port_a_logical_ram_width = 64,
		ram_block11a_61.port_b_address_clear = "clear1",
		ram_block11a_61.port_b_address_clock = "clock1",
		ram_block11a_61.port_b_address_width = 6,
		ram_block11a_61.port_b_data_out_clear = "none",
		ram_block11a_61.port_b_data_width = 1,
		ram_block11a_61.port_b_first_address = 0,
		ram_block11a_61.port_b_first_bit_number = 61,
		ram_block11a_61.port_b_last_address = 63,
		ram_block11a_61.port_b_logical_ram_depth = 64,
		ram_block11a_61.port_b_logical_ram_width = 64,
		ram_block11a_61.port_b_read_enable_clock = "clock1",
		ram_block11a_61.ram_block_type = "M9K",
		ram_block11a_61.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_62
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.ena0(wren_a),
	.portaaddr({address_a_wire[5:0]}),
	.portadatain({data_a[62]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[5:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_62portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_62.clk0_core_clock_enable = "ena0",
		ram_block11a_62.clk0_input_clock_enable = "none",
		ram_block11a_62.clk1_core_clock_enable = "none",
		ram_block11a_62.clk1_input_clock_enable = "none",
		ram_block11a_62.connectivity_checking = "OFF",
		ram_block11a_62.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_62.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_62.operation_mode = "dual_port",
		ram_block11a_62.port_a_address_width = 6,
		ram_block11a_62.port_a_data_width = 1,
		ram_block11a_62.port_a_first_address = 0,
		ram_block11a_62.port_a_first_bit_number = 62,
		ram_block11a_62.port_a_last_address = 63,
		ram_block11a_62.port_a_logical_ram_depth = 64,
		ram_block11a_62.port_a_logical_ram_width = 64,
		ram_block11a_62.port_b_address_clear = "clear1",
		ram_block11a_62.port_b_address_clock = "clock1",
		ram_block11a_62.port_b_address_width = 6,
		ram_block11a_62.port_b_data_out_clear = "none",
		ram_block11a_62.port_b_data_width = 1,
		ram_block11a_62.port_b_first_address = 0,
		ram_block11a_62.port_b_first_bit_number = 62,
		ram_block11a_62.port_b_last_address = 63,
		ram_block11a_62.port_b_logical_ram_depth = 64,
		ram_block11a_62.port_b_logical_ram_width = 64,
		ram_block11a_62.port_b_read_enable_clock = "clock1",
		ram_block11a_62.ram_block_type = "M9K",
		ram_block11a_62.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_63
	( 
	.clk0(clock0),
	.clk1(clock1),
	.clr1(aclr1),
	.ena0(wren_a),
	.portaaddr({address_a_wire[5:0]}),
	.portadatain({data_a[63]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[5:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_63portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_63.clk0_core_clock_enable = "ena0",
		ram_block11a_63.clk0_input_clock_enable = "none",
		ram_block11a_63.clk1_core_clock_enable = "none",
		ram_block11a_63.clk1_input_clock_enable = "none",
		ram_block11a_63.connectivity_checking = "OFF",
		ram_block11a_63.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_63.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_63.operation_mode = "dual_port",
		ram_block11a_63.port_a_address_width = 6,
		ram_block11a_63.port_a_data_width = 1,
		ram_block11a_63.port_a_first_address = 0,
		ram_block11a_63.port_a_first_bit_number = 63,
		ram_block11a_63.port_a_last_address = 63,
		ram_block11a_63.port_a_logical_ram_depth = 64,
		ram_block11a_63.port_a_logical_ram_width = 64,
		ram_block11a_63.port_b_address_clear = "clear1",
		ram_block11a_63.port_b_address_clock = "clock1",
		ram_block11a_63.port_b_address_width = 6,
		ram_block11a_63.port_b_data_out_clear = "none",
		ram_block11a_63.port_b_data_width = 1,
		ram_block11a_63.port_b_first_address = 0,
		ram_block11a_63.port_b_first_bit_number = 63,
		ram_block11a_63.port_b_last_address = 63,
		ram_block11a_63.port_b_logical_ram_depth = 64,
		ram_block11a_63.port_b_logical_ram_width = 64,
		ram_block11a_63.port_b_read_enable_clock = "clock1",
		ram_block11a_63.ram_block_type = "M9K",
		ram_block11a_63.lpm_type = "cycloneive_ram_block";
	assign
		address_a_wire = address_a,
		address_b_wire = address_b,
		q_b = {wire_ram_block11a_63portbdataout[0], wire_ram_block11a_62portbdataout[0], wire_ram_block11a_61portbdataout[0], wire_ram_block11a_60portbdataout[0], wire_ram_block11a_59portbdataout[0], wire_ram_block11a_58portbdataout[0], wire_ram_block11a_57portbdataout[0], wire_ram_block11a_56portbdataout[0], wire_ram_block11a_55portbdataout[0], wire_ram_block11a_54portbdataout[0], wire_ram_block11a_53portbdataout[0], wire_ram_block11a_52portbdataout[0], wire_ram_block11a_51portbdataout[0], wire_ram_block11a_50portbdataout[0], wire_ram_block11a_49portbdataout[0], wire_ram_block11a_48portbdataout[0], wire_ram_block11a_47portbdataout[0], wire_ram_block11a_46portbdataout[0], wire_ram_block11a_45portbdataout[0], wire_ram_block11a_44portbdataout[0], wire_ram_block11a_43portbdataout[0], wire_ram_block11a_42portbdataout[0], wire_ram_block11a_41portbdataout[0], wire_ram_block11a_40portbdataout[0], wire_ram_block11a_39portbdataout[0], wire_ram_block11a_38portbdataout[0], wire_ram_block11a_37portbdataout[0], wire_ram_block11a_36portbdataout[0], wire_ram_block11a_35portbdataout[0], wire_ram_block11a_34portbdataout[0], wire_ram_block11a_33portbdataout[0], wire_ram_block11a_32portbdataout[0], wire_ram_block11a_31portbdataout[0], wire_ram_block11a_30portbdataout[0], wire_ram_block11a_29portbdataout[0], wire_ram_block11a_28portbdataout[0], wire_ram_block11a_27portbdataout[0], wire_ram_block11a_26portbdataout[0], wire_ram_block11a_25portbdataout[0], wire_ram_block11a_24portbdataout[0], wire_ram_block11a_23portbdataout[0], wire_ram_block11a_22portbdataout[0], wire_ram_block11a_21portbdataout[0], wire_ram_block11a_20portbdataout[0], wire_ram_block11a_19portbdataout[0], wire_ram_block11a_18portbdataout[0], wire_ram_block11a_17portbdataout[0], wire_ram_block11a_16portbdataout[0], wire_ram_block11a_15portbdataout[0], wire_ram_block11a_14portbdataout[0], wire_ram_block11a_13portbdataout[0], wire_ram_block11a_12portbdataout[0], wire_ram_block11a_11portbdataout[0], wire_ram_block11a_10portbdataout[0], wire_ram_block11a_9portbdataout[0], wire_ram_block11a_8portbdataout[0]
, wire_ram_block11a_7portbdataout[0], wire_ram_block11a_6portbdataout[0], wire_ram_block11a_5portbdataout[0], wire_ram_block11a_4portbdataout[0], wire_ram_block11a_3portbdataout[0], wire_ram_block11a_2portbdataout[0], wire_ram_block11a_1portbdataout[0], wire_ram_block11a_0portbdataout[0]};
endmodule //sdram_fifo_altsyncram


//dffpipe DELAY=1 WIDTH=7 clock clrn d q ALTERA_INTERNAL_OPTIONS=AUTO_SHIFT_REGISTER_RECOGNITION=OFF
//VERSION_BEGIN 20.1 cbx_mgl 2020:11:11:17:08:38:SJ cbx_stratixii 2020:11:11:17:06:46:SJ cbx_util_mgl 2020:11:11:17:06:46:SJ  VERSION_END

//synthesis_resources = reg 7 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
(* ALTERA_ATTRIBUTE = {"AUTO_SHIFT_REGISTER_RECOGNITION=OFF"} *)
module  sdram_fifo_dffpipe
	( 
	clock,
	clrn,
	d,
	q) /* synthesis synthesis_clearbox=1 */;
	input   clock;
	input   clrn;
	input   [6:0]  d;
	output   [6:0]  q;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   clock;
	tri1   clrn;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	reg	[6:0]	dffe12a;
	wire ena;
	wire prn;
	wire sclr;

	// synopsys translate_off
	initial
		dffe12a = 0;
	// synopsys translate_on
	always @ ( posedge clock or  negedge prn or  negedge clrn)
		if (prn == 1'b0) dffe12a <= {7{1'b1}};
		else if (clrn == 1'b0) dffe12a <= 7'b0;
		else if  (ena == 1'b1)   dffe12a <= (d & {7{(~ sclr)}});
	assign
		ena = 1'b1,
		prn = 1'b1,
		q = dffe12a,
		sclr = 1'b0;
endmodule //sdram_fifo_dffpipe


//dffpipe DELAY=2 WIDTH=7 clock clrn d q ALTERA_INTERNAL_OPTIONS=X_ON_VIOLATION_OPTION=OFF;SYNCHRONIZER_IDENTIFICATION=FORCED_IF_ASYNCHRONOUS;PRESERVE_REGISTER=ON;DONT_MERGE_REGISTER=ON;ADV_NETLIST_OPT_ALLOWED=NEVER_ALLOW
//VERSION_BEGIN 20.1 cbx_a_gray2bin 2020:11:11:17:06:45:SJ cbx_a_graycounter 2020:11:11:17:06:45:SJ cbx_altdpram 2020:11:11:17:06:45:SJ cbx_altera_counter 2020:11:11:17:06:45:SJ cbx_altera_gray_counter 2020:11:11:17:06:45:SJ cbx_altera_syncram 2020:11:11:17:06:45:SJ cbx_altera_syncram_nd_impl 2020:11:11:17:06:45:SJ cbx_altsyncram 2020:11:11:17:06:45:SJ cbx_cycloneii 2020:11:11:17:06:45:SJ cbx_dcfifo 2020:11:11:17:06:45:SJ cbx_fifo_common 2020:11:11:17:06:45:SJ cbx_lpm_add_sub 2020:11:11:17:06:45:SJ cbx_lpm_compare 2020:11:11:17:06:45:SJ cbx_lpm_counter 2020:11:11:17:06:45:SJ cbx_lpm_decode 2020:11:11:17:06:45:SJ cbx_lpm_mux 2020:11:11:17:06:45:SJ cbx_mgl 2020:11:11:17:08:38:SJ cbx_nadder 2020:11:11:17:06:46:SJ cbx_scfifo 2020:11:11:17:06:46:SJ cbx_stratix 2020:11:11:17:06:46:SJ cbx_stratixii 2020:11:11:17:06:46:SJ cbx_stratixiii 2020:11:11:17:06:46:SJ cbx_stratixv 2020:11:11:17:06:46:SJ cbx_util_mgl 2020:11:11:17:06:46:SJ  VERSION_END


//dffpipe DELAY=2 WIDTH=7 clock clrn d q ALTERA_INTERNAL_OPTIONS=AUTO_SHIFT_REGISTER_RECOGNITION=OFF
//VERSION_BEGIN 20.1 cbx_mgl 2020:11:11:17:08:38:SJ cbx_stratixii 2020:11:11:17:06:46:SJ cbx_util_mgl 2020:11:11:17:06:46:SJ  VERSION_END

//synthesis_resources = reg 14 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
(* ALTERA_ATTRIBUTE = {"AUTO_SHIFT_REGISTER_RECOGNITION=OFF"} *)
module  sdram_fifo_dffpipe1
	( 
	clock,
	clrn,
	d,
	q) /* synthesis synthesis_clearbox=1 */;
	input   clock;
	input   clrn;
	input   [6:0]  d;
	output   [6:0]  q;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   clock;
	tri1   clrn;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	reg	[6:0]	dffe14a;
	reg	[6:0]	dffe15a;
	wire ena;
	wire prn;
	wire sclr;

	// synopsys translate_off
	initial
		dffe14a = 0;
	// synopsys translate_on
	always @ ( posedge clock or  negedge prn or  negedge clrn)
		if (prn == 1'b0) dffe14a <= {7{1'b1}};
		else if (clrn == 1'b0) dffe14a <= 7'b0;
		else if  (ena == 1'b1)   dffe14a <= (d & {7{(~ sclr)}});
	// synopsys translate_off
	initial
		dffe15a = 0;
	// synopsys translate_on
	always @ ( posedge clock or  negedge prn or  negedge clrn)
		if (prn == 1'b0) dffe15a <= {7{1'b1}};
		else if (clrn == 1'b0) dffe15a <= 7'b0;
		else if  (ena == 1'b1)   dffe15a <= (dffe14a & {7{(~ sclr)}});
	assign
		ena = 1'b1,
		prn = 1'b1,
		q = dffe15a,
		sclr = 1'b0;
endmodule //sdram_fifo_dffpipe1

//synthesis_resources = reg 14 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
(* ALTERA_ATTRIBUTE = {"X_ON_VIOLATION_OPTION=OFF;SYNCHRONIZER_IDENTIFICATION=FORCED_IF_ASYNCHRONOUS;PRESERVE_REGISTER=ON;DONT_MERGE_REGISTER=ON;ADV_NETLIST_OPT_ALLOWED=NEVER_ALLOW"} *)
module  sdram_fifo_alt_synch_pipe
	( 
	clock,
	clrn,
	d,
	q) /* synthesis synthesis_clearbox=1 */;
	input   clock;
	input   clrn;
	input   [6:0]  d;
	output   [6:0]  q;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri1   clrn;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire  [6:0]   wire_dffpipe13_q;

	sdram_fifo_dffpipe1   dffpipe13
	( 
	.clock(clock),
	.clrn(clrn),
	.d(d),
	.q(wire_dffpipe13_q));
	assign
		q = wire_dffpipe13_q;
endmodule //sdram_fifo_alt_synch_pipe


//dffpipe DELAY=2 WIDTH=7 clock clrn d q ALTERA_INTERNAL_OPTIONS=X_ON_VIOLATION_OPTION=OFF;SYNCHRONIZER_IDENTIFICATION=FORCED_IF_ASYNCHRONOUS;PRESERVE_REGISTER=ON;DONT_MERGE_REGISTER=ON;ADV_NETLIST_OPT_ALLOWED=NEVER_ALLOW
//VERSION_BEGIN 20.1 cbx_a_gray2bin 2020:11:11:17:06:45:SJ cbx_a_graycounter 2020:11:11:17:06:45:SJ cbx_altdpram 2020:11:11:17:06:45:SJ cbx_altera_counter 2020:11:11:17:06:45:SJ cbx_altera_gray_counter 2020:11:11:17:06:45:SJ cbx_altera_syncram 2020:11:11:17:06:45:SJ cbx_altera_syncram_nd_impl 2020:11:11:17:06:45:SJ cbx_altsyncram 2020:11:11:17:06:45:SJ cbx_cycloneii 2020:11:11:17:06:45:SJ cbx_dcfifo 2020:11:11:17:06:45:SJ cbx_fifo_common 2020:11:11:17:06:45:SJ cbx_lpm_add_sub 2020:11:11:17:06:45:SJ cbx_lpm_compare 2020:11:11:17:06:45:SJ cbx_lpm_counter 2020:11:11:17:06:45:SJ cbx_lpm_decode 2020:11:11:17:06:45:SJ cbx_lpm_mux 2020:11:11:17:06:45:SJ cbx_mgl 2020:11:11:17:08:38:SJ cbx_nadder 2020:11:11:17:06:46:SJ cbx_scfifo 2020:11:11:17:06:46:SJ cbx_stratix 2020:11:11:17:06:46:SJ cbx_stratixii 2020:11:11:17:06:46:SJ cbx_stratixiii 2020:11:11:17:06:46:SJ cbx_stratixv 2020:11:11:17:06:46:SJ cbx_util_mgl 2020:11:11:17:06:46:SJ  VERSION_END


//dffpipe DELAY=2 WIDTH=7 clock clrn d q ALTERA_INTERNAL_OPTIONS=AUTO_SHIFT_REGISTER_RECOGNITION=OFF
//VERSION_BEGIN 20.1 cbx_mgl 2020:11:11:17:08:38:SJ cbx_stratixii 2020:11:11:17:06:46:SJ cbx_util_mgl 2020:11:11:17:06:46:SJ  VERSION_END

//synthesis_resources = reg 14 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
(* ALTERA_ATTRIBUTE = {"AUTO_SHIFT_REGISTER_RECOGNITION=OFF"} *)
module  sdram_fifo_dffpipe12
	( 
	clock,
	clrn,
	d,
	q) /* synthesis synthesis_clearbox=1 */;
	input   clock;
	input   clrn;
	input   [6:0]  d;
	output   [6:0]  q;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   clock;
	tri1   clrn;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	reg	[6:0]	dffe17a;
	reg	[6:0]	dffe18a;
	wire ena;
	wire prn;
	wire sclr;

	// synopsys translate_off
	initial
		dffe17a = 0;
	// synopsys translate_on
	always @ ( posedge clock or  negedge prn or  negedge clrn)
		if (prn == 1'b0) dffe17a <= {7{1'b1}};
		else if (clrn == 1'b0) dffe17a <= 7'b0;
		else if  (ena == 1'b1)   dffe17a <= (d & {7{(~ sclr)}});
	// synopsys translate_off
	initial
		dffe18a = 0;
	// synopsys translate_on
	always @ ( posedge clock or  negedge prn or  negedge clrn)
		if (prn == 1'b0) dffe18a <= {7{1'b1}};
		else if (clrn == 1'b0) dffe18a <= 7'b0;
		else if  (ena == 1'b1)   dffe18a <= (dffe17a & {7{(~ sclr)}});
	assign
		ena = 1'b1,
		prn = 1'b1,
		q = dffe18a,
		sclr = 1'b0;
endmodule //sdram_fifo_dffpipe12

//synthesis_resources = reg 14 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
(* ALTERA_ATTRIBUTE = {"X_ON_VIOLATION_OPTION=OFF;SYNCHRONIZER_IDENTIFICATION=FORCED_IF_ASYNCHRONOUS;PRESERVE_REGISTER=ON;DONT_MERGE_REGISTER=ON;ADV_NETLIST_OPT_ALLOWED=NEVER_ALLOW"} *)
module  sdram_fifo_alt_synch_pipe1
	( 
	clock,
	clrn,
	d,
	q) /* synthesis synthesis_clearbox=1 */;
	input   clock;
	input   clrn;
	input   [6:0]  d;
	output   [6:0]  q;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri1   clrn;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire  [6:0]   wire_dffpipe16_q;

	sdram_fifo_dffpipe12   dffpipe16
	( 
	.clock(clock),
	.clrn(clrn),
	.d(d),
	.q(wire_dffpipe16_q));
	assign
		q = wire_dffpipe16_q;
endmodule //sdram_fifo_alt_synch_pipe1


//lpm_add_sub DEVICE_FAMILY="Cyclone IV E" LPM_DIRECTION="SUB" LPM_WIDTH=7 dataa datab result
//VERSION_BEGIN 20.1 cbx_cycloneii 2020:11:11:17:06:45:SJ cbx_lpm_add_sub 2020:11:11:17:06:45:SJ cbx_mgl 2020:11:11:17:08:38:SJ cbx_nadder 2020:11:11:17:06:46:SJ cbx_stratix 2020:11:11:17:06:46:SJ cbx_stratixii 2020:11:11:17:06:46:SJ  VERSION_END


//lpm_add_sub DEVICE_FAMILY="Cyclone IV E" LPM_DIRECTION="SUB" LPM_WIDTH=7 dataa datab result
//VERSION_BEGIN 20.1 cbx_cycloneii 2020:11:11:17:06:45:SJ cbx_lpm_add_sub 2020:11:11:17:06:45:SJ cbx_mgl 2020:11:11:17:08:38:SJ cbx_nadder 2020:11:11:17:06:46:SJ cbx_stratix 2020:11:11:17:06:46:SJ cbx_stratixii 2020:11:11:17:06:46:SJ  VERSION_END


//lpm_compare DEVICE_FAMILY="Cyclone IV E" LPM_WIDTH=4 aeb dataa datab
//VERSION_BEGIN 20.1 cbx_cycloneii 2020:11:11:17:06:45:SJ cbx_lpm_add_sub 2020:11:11:17:06:45:SJ cbx_lpm_compare 2020:11:11:17:06:45:SJ cbx_mgl 2020:11:11:17:08:38:SJ cbx_nadder 2020:11:11:17:06:46:SJ cbx_stratix 2020:11:11:17:06:46:SJ cbx_stratixii 2020:11:11:17:06:46:SJ  VERSION_END

//synthesis_resources = 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  sdram_fifo_cmpr
	( 
	aeb,
	dataa,
	datab) /* synthesis synthesis_clearbox=1 */;
	output   aeb;
	input   [3:0]  dataa;
	input   [3:0]  datab;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   [3:0]  dataa;
	tri0   [3:0]  datab;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire  [0:0]  aeb_result_wire;
	wire  [0:0]  aneb_result_wire;
	wire  [9:0]  data_wire;
	wire  eq_wire;

	assign
		aeb = eq_wire,
		aeb_result_wire = (~ aneb_result_wire),
		aneb_result_wire = (data_wire[0] | data_wire[1]),
		data_wire = {datab[3], dataa[3], datab[2], dataa[2], datab[1], dataa[1], datab[0], dataa[0], ((data_wire[6] ^ data_wire[7]) | (data_wire[8] ^ data_wire[9])), ((data_wire[2] ^ data_wire[3]) | (data_wire[4] ^ data_wire[5]))},
		eq_wire = aeb_result_wire;
endmodule //sdram_fifo_cmpr


//lpm_compare DEVICE_FAMILY="Cyclone IV E" LPM_WIDTH=3 aeb dataa datab
//VERSION_BEGIN 20.1 cbx_cycloneii 2020:11:11:17:06:45:SJ cbx_lpm_add_sub 2020:11:11:17:06:45:SJ cbx_lpm_compare 2020:11:11:17:06:45:SJ cbx_mgl 2020:11:11:17:08:38:SJ cbx_nadder 2020:11:11:17:06:46:SJ cbx_stratix 2020:11:11:17:06:46:SJ cbx_stratixii 2020:11:11:17:06:46:SJ  VERSION_END

//synthesis_resources = 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  sdram_fifo_cmpr1
	( 
	aeb,
	dataa,
	datab) /* synthesis synthesis_clearbox=1 */;
	output   aeb;
	input   [2:0]  dataa;
	input   [2:0]  datab;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   [2:0]  dataa;
	tri0   [2:0]  datab;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire  [0:0]  aeb_result_wire;
	wire  [0:0]  aneb_result_wire;
	wire  [7:0]  data_wire;
	wire  eq_wire;

	assign
		aeb = eq_wire,
		aeb_result_wire = (~ aneb_result_wire),
		aneb_result_wire = (data_wire[0] | data_wire[1]),
		data_wire = {datab[2], dataa[2], datab[1], dataa[1], datab[0], dataa[0], (data_wire[6] ^ data_wire[7]), ((data_wire[2] ^ data_wire[3]) | (data_wire[4] ^ data_wire[5]))},
		eq_wire = aeb_result_wire;
endmodule //sdram_fifo_cmpr1


//lpm_mux DEVICE_FAMILY="Cyclone IV E" LPM_SIZE=2 LPM_WIDTH=1 LPM_WIDTHS=1 data result sel
//VERSION_BEGIN 20.1 cbx_lpm_mux 2020:11:11:17:06:45:SJ cbx_mgl 2020:11:11:17:08:38:SJ  VERSION_END

//synthesis_resources = lut 1 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  sdram_fifo_mux
	( 
	data,
	result,
	sel) /* synthesis synthesis_clearbox=1 */;
	input   [1:0]  data;
	output   [0:0]  result;
	input   [0:0]  sel;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   [1:0]  data;
	tri0   [0:0]  sel;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire  [0:0]  result_node;
	wire  [0:0]  sel_node;
	wire  [1:0]  w_data860w;

	assign
		result = result_node,
		result_node = {((sel_node & w_data860w[1]) | ((~ sel_node) & w_data860w[0]))},
		sel_node = {sel[0]},
		w_data860w = {data[1:0]};
endmodule //sdram_fifo_mux

//synthesis_resources = lut 20 M9K 2 reg 115 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
(* ALTERA_ATTRIBUTE = {"AUTO_SHIFT_REGISTER_RECOGNITION=OFF;REMOVE_DUPLICATE_REGISTERS=OFF;SYNCHRONIZER_IDENTIFICATION=OFF;SYNCHRONIZATION_REGISTER_CHAIN_LENGTH = 3;suppress_da_rule_internal=d101;suppress_da_rule_internal=d102;suppress_da_rule_internal=d103;-name CUT ON -from rdptr_g -to ws_dgrp|sdram_fifo_dffpipe12:dffpipe16|dffe17a;-name SDC_STATEMENT \"set_false_path -from *rdptr_g* -to *ws_dgrp|sdram_fifo_dffpipe12:dffpipe16|dffe17a* \";-name CUT ON -from delayed_wrptr_g -to rs_dgwp|sdram_fifo_dffpipe1:dffpipe13|dffe14a;-name SDC_STATEMENT \"set_false_path -from *delayed_wrptr_g* -to *rs_dgwp|sdram_fifo_dffpipe1:dffpipe13|dffe14a* \""} *)
module  sdram_fifo_dcfifo
	( 
	aclr,
	data,
	q,
	rdclk,
	rdreq,
	rdusedw,
	wrclk,
	wrreq,
	wrusedw) /* synthesis synthesis_clearbox=1 */;
	input   aclr;
	input   [63:0]  data;
	output   [63:0]  q;
	input   rdclk;
	input   rdreq;
	output   [5:0]  rdusedw;
	input   wrclk;
	input   wrreq;
	output   [5:0]  wrusedw;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   aclr;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire  [6:0]   wire_rdptr_g_gray2bin_bin;
	wire  [6:0]   wire_rs_dgwp_gray2bin_bin;
	wire  [6:0]   wire_wrptr_g_gray2bin_bin;
	wire  [6:0]   wire_ws_dgrp_gray2bin_bin;
	wire  [6:0]   wire_rdptr_g1p_q;
	wire  [6:0]   wire_wrptr_g1p_q;
	wire  [63:0]   wire_fifo_ram_q_b;
	reg	[6:0]	delayed_wrptr_g;
	(* ALTERA_ATTRIBUTE = {"SYNCHRONIZER_IDENTIFICATION=FORCED_IF_ASYNCHRONOUS;PRESERVE_REGISTER=ON;POWER_UP_LEVEL=HIGH"} *)
	reg	rdemp_eq_comp_lsb_aeb;
	(* ALTERA_ATTRIBUTE = {"SYNCHRONIZER_IDENTIFICATION=FORCED_IF_ASYNCHRONOUS;PRESERVE_REGISTER=ON;POWER_UP_LEVEL=HIGH"} *)
	reg	rdemp_eq_comp_msb_aeb;
	reg	[6:0]	rdptr_g;
	(* ALTERA_ATTRIBUTE = {"SYNCHRONIZER_IDENTIFICATION=FORCED_IF_ASYNCHRONOUS;PRESERVE_REGISTER=ON"} *)
	reg	[6:0]	rs_dgwp_reg;
	(* ALTERA_ATTRIBUTE = {"SYNCHRONIZER_IDENTIFICATION=FORCED_IF_ASYNCHRONOUS;PRESERVE_REGISTER=ON"} *)
	reg	wrfull_eq_comp_lsb_mux_reg;
	(* ALTERA_ATTRIBUTE = {"SYNCHRONIZER_IDENTIFICATION=FORCED_IF_ASYNCHRONOUS;PRESERVE_REGISTER=ON"} *)
	reg	wrfull_eq_comp_msb_mux_reg;
	(* ALTERA_ATTRIBUTE = {"suppress_da_rule_internal=S102;POWER_UP_LEVEL=LOW"} *)
	reg	[6:0]	wrptr_g;
	(* ALTERA_ATTRIBUTE = {"SYNCHRONIZER_IDENTIFICATION=FORCED_IF_ASYNCHRONOUS;PRESERVE_REGISTER=ON"} *)
	reg	[6:0]	ws_dgrp_reg;
	wire  [6:0]   wire_rs_brp_q;
	wire  [6:0]   wire_rs_bwp_q;
	wire  [6:0]   wire_rs_dgwp_q;
	wire  [6:0]   wire_ws_brp_q;
	wire  [6:0]   wire_ws_bwp_q;
	wire  [6:0]   wire_ws_dgrp_q;
	wire	[6:0]	wire_rdusedw_sub_dataa;
	wire	[6:0]	wire_rdusedw_sub_datab;
	wire	[6:0]	wire_rdusedw_sub_result;
	wire	[6:0]	wire_wrusedw_sub_dataa;
	wire	[6:0]	wire_wrusedw_sub_datab;
	wire	[6:0]	wire_wrusedw_sub_result;
	wire  wire_rdempty_eq_comp1_lsb_aeb;
	wire  wire_rdempty_eq_comp1_msb_aeb;
	wire  wire_rdempty_eq_comp_lsb_aeb;
	wire  wire_rdempty_eq_comp_msb_aeb;
	wire  wire_wrfull_eq_comp1_lsb_aeb;
	wire  wire_wrfull_eq_comp1_msb_aeb;
	wire  wire_wrfull_eq_comp_lsb_aeb;
	wire  wire_wrfull_eq_comp_msb_aeb;
	wire  [0:0]   wire_rdemp_eq_comp_lsb_mux_result;
	wire  [0:0]   wire_rdemp_eq_comp_msb_mux_result;
	wire  [0:0]   wire_wrfull_eq_comp_lsb_mux_result;
	wire  [0:0]   wire_wrfull_eq_comp_msb_mux_result;
	wire  [5:0]  ram_address_a;
	wire  [5:0]  ram_address_b;
	wire  valid_rdreq;
	wire  valid_wrreq;
	wire  [6:0]  wrptr_g1s;
	wire  [6:0]  wrptr_gs;

	sdram_fifo_a_gray2bin   rdptr_g_gray2bin
	( 
	.bin(wire_rdptr_g_gray2bin_bin),
	.gray(rdptr_g[6:0]));
	sdram_fifo_a_gray2bin   rs_dgwp_gray2bin
	( 
	.bin(wire_rs_dgwp_gray2bin_bin),
	.gray(rs_dgwp_reg[6:0]));
	sdram_fifo_a_gray2bin   wrptr_g_gray2bin
	( 
	.bin(wire_wrptr_g_gray2bin_bin),
	.gray(wrptr_g[6:0]));
	sdram_fifo_a_gray2bin   ws_dgrp_gray2bin
	( 
	.bin(wire_ws_dgrp_gray2bin_bin),
	.gray(ws_dgrp_reg[6:0]));
	sdram_fifo_a_graycounter   rdptr_g1p
	( 
	.aclr(aclr),
	.clock(rdclk),
	.cnt_en(valid_rdreq),
	.q(wire_rdptr_g1p_q));
	sdram_fifo_a_graycounter1   wrptr_g1p
	( 
	.aclr(aclr),
	.clock(wrclk),
	.cnt_en(valid_wrreq),
	.q(wire_wrptr_g1p_q));
	sdram_fifo_altsyncram   fifo_ram
	( 
	.aclr1(aclr),
	.address_a(ram_address_a),
	.address_b(ram_address_b),
	.addressstall_b((~ valid_rdreq)),
	.clock0(wrclk),
	.clock1(rdclk),
	.data_a(data),
	.q_b(wire_fifo_ram_q_b),
	.wren_a(valid_wrreq));
	// synopsys translate_off
	initial
		delayed_wrptr_g = 0;
	// synopsys translate_on
	always @ ( posedge wrclk or  posedge aclr)
		if (aclr == 1'b1) delayed_wrptr_g <= 7'b0;
		else  delayed_wrptr_g <= wrptr_g;
	// synopsys translate_off
	initial
		rdemp_eq_comp_lsb_aeb = {1{1'b1}};
	// synopsys translate_on
	always @ ( posedge rdclk or  posedge aclr)
		if (aclr == 1'b1) rdemp_eq_comp_lsb_aeb <= {1{1'b1}};
		else  rdemp_eq_comp_lsb_aeb <= wire_rdemp_eq_comp_lsb_mux_result;
	// synopsys translate_off
	initial
		rdemp_eq_comp_msb_aeb = {1{1'b1}};
	// synopsys translate_on
	always @ ( posedge rdclk or  posedge aclr)
		if (aclr == 1'b1) rdemp_eq_comp_msb_aeb <= {1{1'b1}};
		else  rdemp_eq_comp_msb_aeb <= wire_rdemp_eq_comp_msb_mux_result;
	// synopsys translate_off
	initial
		rdptr_g = 0;
	// synopsys translate_on
	always @ ( posedge rdclk or  posedge aclr)
		if (aclr == 1'b1) rdptr_g <= 7'b0;
		else if  (valid_rdreq == 1'b1)   rdptr_g <= wire_rdptr_g1p_q;
	// synopsys translate_off
	initial
		rs_dgwp_reg = 0;
	// synopsys translate_on
	always @ ( posedge rdclk or  posedge aclr)
		if (aclr == 1'b1) rs_dgwp_reg <= 7'b0;
		else  rs_dgwp_reg <= wire_rs_dgwp_q;
	// synopsys translate_off
	initial
		wrfull_eq_comp_lsb_mux_reg = 0;
	// synopsys translate_on
	always @ ( posedge wrclk or  posedge aclr)
		if (aclr == 1'b1) wrfull_eq_comp_lsb_mux_reg <= 1'b0;
		else  wrfull_eq_comp_lsb_mux_reg <= wire_wrfull_eq_comp_lsb_mux_result;
	// synopsys translate_off
	initial
		wrfull_eq_comp_msb_mux_reg = 0;
	// synopsys translate_on
	always @ ( posedge wrclk or  posedge aclr)
		if (aclr == 1'b1) wrfull_eq_comp_msb_mux_reg <= 1'b0;
		else  wrfull_eq_comp_msb_mux_reg <= wire_wrfull_eq_comp_msb_mux_result;
	// synopsys translate_off
	initial
		wrptr_g = 0;
	// synopsys translate_on
	always @ ( posedge wrclk or  posedge aclr)
		if (aclr == 1'b1) wrptr_g <= 7'b0;
		else if  (valid_wrreq == 1'b1)   wrptr_g <= wire_wrptr_g1p_q;
	// synopsys translate_off
	initial
		ws_dgrp_reg = 0;
	// synopsys translate_on
	always @ ( posedge wrclk or  posedge aclr)
		if (aclr == 1'b1) ws_dgrp_reg <= 7'b0;
		else  ws_dgrp_reg <= wire_ws_dgrp_q;
	sdram_fifo_dffpipe   rs_brp
	( 
	.clock(rdclk),
	.clrn((~ aclr)),
	.d(wire_rdptr_g_gray2bin_bin),
	.q(wire_rs_brp_q));
	sdram_fifo_dffpipe   rs_bwp
	( 
	.clock(rdclk),
	.clrn((~ aclr)),
	.d(wire_rs_dgwp_gray2bin_bin),
	.q(wire_rs_bwp_q));
	sdram_fifo_alt_synch_pipe   rs_dgwp
	( 
	.clock(rdclk),
	.clrn((~ aclr)),
	.d(delayed_wrptr_g),
	.q(wire_rs_dgwp_q));
	sdram_fifo_dffpipe   ws_brp
	( 
	.clock(wrclk),
	.clrn((~ aclr)),
	.d(wire_ws_dgrp_gray2bin_bin),
	.q(wire_ws_brp_q));
	sdram_fifo_dffpipe   ws_bwp
	( 
	.clock(wrclk),
	.clrn((~ aclr)),
	.d(wire_wrptr_g_gray2bin_bin),
	.q(wire_ws_bwp_q));
	sdram_fifo_alt_synch_pipe1   ws_dgrp
	( 
	.clock(wrclk),
	.clrn((~ aclr)),
	.d(rdptr_g),
	.q(wire_ws_dgrp_q));
	assign
		wire_rdusedw_sub_result = wire_rdusedw_sub_dataa - wire_rdusedw_sub_datab;
	assign
		wire_rdusedw_sub_dataa = wire_rs_bwp_q,
		wire_rdusedw_sub_datab = wire_rs_brp_q;
	assign
		wire_wrusedw_sub_result = wire_wrusedw_sub_dataa - wire_wrusedw_sub_datab;
	assign
		wire_wrusedw_sub_dataa = wire_ws_bwp_q,
		wire_wrusedw_sub_datab = wire_ws_brp_q;
	sdram_fifo_cmpr   rdempty_eq_comp1_lsb
	( 
	.aeb(wire_rdempty_eq_comp1_lsb_aeb),
	.dataa(wire_rs_dgwp_q[3:0]),
	.datab(wire_rdptr_g1p_q[3:0]));
	sdram_fifo_cmpr1   rdempty_eq_comp1_msb
	( 
	.aeb(wire_rdempty_eq_comp1_msb_aeb),
	.dataa(wire_rs_dgwp_q[6:4]),
	.datab(wire_rdptr_g1p_q[6:4]));
	sdram_fifo_cmpr   rdempty_eq_comp_lsb
	( 
	.aeb(wire_rdempty_eq_comp_lsb_aeb),
	.dataa(wire_rs_dgwp_q[3:0]),
	.datab(rdptr_g[3:0]));
	sdram_fifo_cmpr1   rdempty_eq_comp_msb
	( 
	.aeb(wire_rdempty_eq_comp_msb_aeb),
	.dataa(wire_rs_dgwp_q[6:4]),
	.datab(rdptr_g[6:4]));
	sdram_fifo_cmpr   wrfull_eq_comp1_lsb
	( 
	.aeb(wire_wrfull_eq_comp1_lsb_aeb),
	.dataa(wire_ws_dgrp_q[3:0]),
	.datab(wrptr_g1s[3:0]));
	sdram_fifo_cmpr1   wrfull_eq_comp1_msb
	( 
	.aeb(wire_wrfull_eq_comp1_msb_aeb),
	.dataa(wire_ws_dgrp_q[6:4]),
	.datab(wrptr_g1s[6:4]));
	sdram_fifo_cmpr   wrfull_eq_comp_lsb
	( 
	.aeb(wire_wrfull_eq_comp_lsb_aeb),
	.dataa(wire_ws_dgrp_q[3:0]),
	.datab(wrptr_gs[3:0]));
	sdram_fifo_cmpr1   wrfull_eq_comp_msb
	( 
	.aeb(wire_wrfull_eq_comp_msb_aeb),
	.dataa(wire_ws_dgrp_q[6:4]),
	.datab(wrptr_gs[6:4]));
	sdram_fifo_mux   rdemp_eq_comp_lsb_mux
	( 
	.data({wire_rdempty_eq_comp1_lsb_aeb, wire_rdempty_eq_comp_lsb_aeb}),
	.result(wire_rdemp_eq_comp_lsb_mux_result),
	.sel(valid_rdreq));
	sdram_fifo_mux   rdemp_eq_comp_msb_mux
	( 
	.data({wire_rdempty_eq_comp1_msb_aeb, wire_rdempty_eq_comp_msb_aeb}),
	.result(wire_rdemp_eq_comp_msb_mux_result),
	.sel(valid_rdreq));
	sdram_fifo_mux   wrfull_eq_comp_lsb_mux
	( 
	.data({wire_wrfull_eq_comp1_lsb_aeb, wire_wrfull_eq_comp_lsb_aeb}),
	.result(wire_wrfull_eq_comp_lsb_mux_result),
	.sel(valid_wrreq));
	sdram_fifo_mux   wrfull_eq_comp_msb_mux
	( 
	.data({wire_wrfull_eq_comp1_msb_aeb, wire_wrfull_eq_comp_msb_aeb}),
	.result(wire_wrfull_eq_comp_msb_mux_result),
	.sel(valid_wrreq));
	assign
		q = wire_fifo_ram_q_b,
		ram_address_a = {(wrptr_g[6] ^ wrptr_g[5]), wrptr_g[4:0]},
		ram_address_b = {(wire_rdptr_g1p_q[6] ^ wire_rdptr_g1p_q[5]), wire_rdptr_g1p_q[4:0]},
		rdusedw = {wire_rdusedw_sub_result[5:0]},
		valid_rdreq = rdreq,
		valid_wrreq = wrreq,
		wrptr_g1s = {(~ wire_wrptr_g1p_q[6]), (~ wire_wrptr_g1p_q[5]), wire_wrptr_g1p_q[4:0]},
		wrptr_gs = {(~ wrptr_g[6]), (~ wrptr_g[5]), wrptr_g[4:0]},
		wrusedw = {wire_wrusedw_sub_result[5:0]};
endmodule //sdram_fifo_dcfifo
//VALID FILE


// synopsys translate_off
`timescale 1 ps / 1 ps
// synopsys translate_on
module sdram_fifo (
	aclr,
	data,
	rdclk,
	rdreq,
	wrclk,
	wrreq,
	q,
	rdusedw,
	wrusedw)/* synthesis synthesis_clearbox = 1 */;

	input	  aclr;
	input	[63:0]  data;
	input	  rdclk;
	input	  rdreq;
	input	  wrclk;
	input	  wrreq;
	output	[63:0]  q;
	output	[5:0]  rdusedw;
	output	[5:0]  wrusedw;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0	  aclr;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire [63:0] sub_wire0;
	wire [5:0] sub_wire1;
	wire [5:0] sub_wire2;
	wire [63:0] q = sub_wire0[63:0];
	wire [5:0] rdusedw = sub_wire1[5:0];
	wire [5:0] wrusedw = sub_wire2[5:0];

	sdram_fifo_dcfifo	sdram_fifo_dcfifo_component (
				.aclr (aclr),
				.data (data),
				.rdclk (rdclk),
				.rdreq (rdreq),
				.wrclk (wrclk),
				.wrreq (wrreq),
				.q (sub_wire0),
				.rdusedw (sub_wire1),
				.wrusedw (sub_wire2));

endmodule

// ============================================================
// CNX file retrieval info
// ============================================================
// Retrieval info: PRIVATE: AlmostEmpty NUMERIC "0"
// Retrieval info: PRIVATE: AlmostEmptyThr NUMERIC "-1"
// Retrieval info: PRIVATE: AlmostFull NUMERIC "0"
// Retrieval info: PRIVATE: AlmostFullThr NUMERIC "-1"
// Retrieval info: PRIVATE: CLOCKS_ARE_SYNCHRONIZED NUMERIC "0"
// Retrieval info: PRIVATE: Clock NUMERIC "4"
// Retrieval info: PRIVATE: Depth NUMERIC "64"
// Retrieval info: PRIVATE: Empty NUMERIC "1"
// Retrieval info: PRIVATE: Full NUMERIC "1"
// Retrieval info: PRIVATE: INTENDED_DEVICE_FAMILY STRING "Cyclone IV E"
// Retrieval info: PRIVATE: LE_BasedFIFO NUMERIC "0"
// Retrieval info: PRIVATE: LegacyRREQ NUMERIC "0"
// Retrieval info: PRIVATE: MAX_DEPTH_BY_9 NUMERIC "0"
// Retrieval info: PRIVATE: OVERFLOW_CHECKING NUMERIC "1"
// Retrieval info: PRIVATE: Optimize NUMERIC "2"
// Retrieval info: PRIVATE: RAM_BLOCK_TYPE NUMERIC "2"
// Retrieval info: PRIVATE: SYNTH_WRAPPER_GEN_POSTFIX STRING "1"
// Retrieval info: PRIVATE: UNDERFLOW_CHECKING NUMERIC "1"
// Retrieval info: PRIVATE: UsedW NUMERIC "1"
// Retrieval info: PRIVATE: Width NUMERIC "64"
// Retrieval info: PRIVATE: dc_aclr NUMERIC "1"
// Retrieval info: PRIVATE: diff_widths NUMERIC "0"
// Retrieval info: PRIVATE: msb_usedw NUMERIC "0"
// Retrieval info: PRIVATE: output_width NUMERIC "64"
// Retrieval info: PRIVATE: rsEmpty NUMERIC "0"
// Retrieval info: PRIVATE: rsFull NUMERIC "0"
// Retrieval info: PRIVATE: rsUsedW NUMERIC "1"
// Retrieval info: PRIVATE: sc_aclr NUMERIC "0"
// Retrieval info: PRIVATE: sc_sclr NUMERIC "0"
// Retrieval info: PRIVATE: wsEmpty NUMERIC "0"
// Retrieval info: PRIVATE: wsFull NUMERIC "0"
// Retrieval info: PRIVATE: wsUsedW NUMERIC "1"
// Retrieval info: LIBRARY: altera_mf altera_mf.altera_mf_components.all
// Retrieval info: CONSTANT: INTENDED_DEVICE_FAMILY STRING "Cyclone IV E"
// Retrieval info: CONSTANT: LPM_HINT STRING "RAM_BLOCK_TYPE=M9K"
// Retrieval info: CONSTANT: LPM_NUMWORDS NUMERIC "64"
// Retrieval info: CONSTANT: LPM_SHOWAHEAD STRING "ON"
// Retrieval info: CONSTANT: LPM_TYPE STRING "dcfifo"
// Retrieval info: CONSTANT: LPM_WIDTH NUMERIC "64"
// Retrieval info: CONSTANT: LPM_WIDTHU NUMERIC "6"
// Retrieval info: CONSTANT: OVERFLOW_CHECKING STRING "OFF"
// Retrieval info: CONSTANT: RDSYNC_DELAYPIPE NUMERIC "5"
// Retrieval info: CONSTANT: READ_ACLR_SYNCH STRING "OFF"
// Retrieval info: CONSTANT: UNDERFLOW_CHECKING STRING "OFF"
// Retrieval info: CONSTANT: USE_EAB STRING "ON"
// Retrieval info: CONSTANT: WRITE_ACLR_SYNCH STRING "OFF"
// Retrieval info: CONSTANT: WRSYNC_DELAYPIPE NUMERIC "5"
// Retrieval info: USED_PORT: aclr 0 0 0 0 INPUT GND "aclr"
// Retrieval info: USED_PORT: data 0 0 64 0 INPUT NODEFVAL "data[63..0]"
// Retrieval info: USED_PORT: q 0 0 64 0 OUTPUT NODEFVAL "q[63..0]"
// Retrieval info: USED_PORT: rdclk 0 0 0 0 INPUT NODEFVAL "rdclk"
// Retrieval info: USED_PORT: rdreq 0 0 0 0 INPUT NODEFVAL "rdreq"
// Retrieval info: USED_PORT: rdusedw 0 0 6 0 OUTPUT NODEFVAL "rdusedw[5..0]"
// Retrieval info: USED_PORT: wrclk 0 0 0 0 INPUT NODEFVAL "wrclk"
// Retrieval info: USED_PORT: wrreq 0 0 0 0 INPUT NODEFVAL "wrreq"
// Retrieval info: USED_PORT: wrusedw 0 0 6 0 OUTPUT NODEFVAL "wrusedw[5..0]"
// Retrieval info: CONNECT: @aclr 0 0 0 0 aclr 0 0 0 0
// Retrieval info: CONNECT: @data 0 0 64 0 data 0 0 64 0
// Retrieval info: CONNECT: @rdclk 0 0 0 0 rdclk 0 0 0 0
// Retrieval info: CONNECT: @rdreq 0 0 0 0 rdreq 0 0 0 0
// Retrieval info: CONNECT: @wrclk 0 0 0 0 wrclk 0 0 0 0
// Retrieval info: CONNECT: @wrreq 0 0 0 0 wrreq 0 0 0 0
// Retrieval info: CONNECT: q 0 0 64 0 @q 0 0 64 0
// Retrieval info: CONNECT: rdusedw 0 0 6 0 @rdusedw 0 0 6 0
// Retrieval info: CONNECT: wrusedw 0 0 6 0 @wrusedw 0 0 6 0
// Retrieval info: GEN_FILE: TYPE_NORMAL sdram_fifo.vhd TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL sdram_fifo.inc FALSE
// Retrieval info: GEN_FILE: TYPE_NORMAL sdram_fifo.cmp TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL sdram_fifo.bsf FALSE
// Retrieval info: GEN_FILE: TYPE_NORMAL sdram_fifo_inst.vhd FALSE
// Retrieval info: GEN_FILE: TYPE_NORMAL sdram_fifo_syn.v TRUE
// Retrieval info: LIB_FILE: altera_mf
